{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "newQuote",
          "type": "string"
        }
      ],
      "name": "quoteUploaded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_time",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_quote",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_user",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "quoteUploadedByUser",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_walletAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_userName",
          "type": "string"
        }
      ],
      "name": "addNewUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "a",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "b",
          "type": "string"
        }
      ],
      "name": "compareStrings",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "num",
          "type": "address"
        }
      ],
      "name": "exists1",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getQuoteByUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "time",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "newQuoteNew",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "byUser",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "internalType": "struct Quote.newQuote[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "quotes",
      "outputs": [
        {
          "internalType": "string",
          "name": "time",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "newQuoteNew",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "byUser",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_time",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_quote",
          "type": "string"
        }
      ],
      "name": "setQuoteLatest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "string",
          "name": "userName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Quote.sol"
  },
  "ast": {
    "absolutePath": "contracts/Quote.sol",
    "exportedSymbols": {
      "Quote": [
        284
      ]
    },
    "id": 285,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Quote",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 284,
        "linearizedBaseContracts": [
          284
        ],
        "name": "Quote",
        "nameLocation": "67:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "quote",
            "nameLocation": "93:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "78:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "78:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "7266d4b1f3890dfc1479f67544c32c5b6726dac11735fcbda06e01c0d2f4fcc3",
            "id": 7,
            "name": "quoteUploaded",
            "nameLocation": "110:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newQuote",
                  "nameLocation": "131:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 7,
                  "src": "124:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "124:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "123:17:0"
            },
            "src": "104:37:0"
          },
          {
            "anonymous": false,
            "eventSelector": "2a57895aabd94cbc9fd7d516fabeb441a142ec4f6d4aabf649a43e2a7b12d586",
            "id": 17,
            "name": "quoteUploadedByUser",
            "nameLocation": "152:19:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "179:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "172:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "193:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "186:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "186:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "208:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "201:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "223:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "215:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "171:65:0"
            },
            "src": "146:91:0"
          },
          {
            "canonicalName": "Quote.userQuoteTime",
            "id": 26,
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "u",
                "nameLocation": "350:1:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "323:28:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                  "typeString": "mapping(address => string)"
                },
                "typeName": {
                  "id": 20,
                  "keyType": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "323:26:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                    "typeString": "mapping(address => string)"
                  },
                  "valueType": {
                    "id": 19,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "_quote",
                "nameLocation": "368:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "361:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 22,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "361:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "_time",
                "nameLocation": "391:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 26,
                "src": "384:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 24,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "384:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "userQuoteTime",
            "nameLocation": "299:13:0",
            "nodeType": "StructDefinition",
            "scope": 284,
            "src": "292:134:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "517:90:0",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "id": 38,
                                      "name": "a",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28,
                                      "src": "559:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 39,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "558:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 36,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "541:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "541:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "541:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 35,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "531:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "531:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "components": [
                                    {
                                      "id": 45,
                                      "name": "b",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30,
                                      "src": "595:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "id": 46,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "594:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 43,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "577:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 44,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "577:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 47,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "577:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 42,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "567:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "567:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "531:68:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 50,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "530:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 34,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "523:77:0"
                }
              ]
            },
            "functionSelector": "bed34bba",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "compareStrings",
            "nameLocation": "440:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "470:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "456:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "487:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "473:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "455:34:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "511:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:6:0"
            },
            "scope": 284,
            "src": "431:176:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Quote.newUser",
            "id": 58,
            "members": [
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "userName",
                "nameLocation": "644:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 58,
                "src": "637:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 54,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "637:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "walletAddress",
                "nameLocation": "670:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 58,
                "src": "662:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 56,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "662:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "newUser",
            "nameLocation": "619:7:0",
            "nodeType": "StructDefinition",
            "scope": 284,
            "src": "612:78:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Quote.newQuote",
            "id": 67,
            "members": [
              {
                "constant": false,
                "id": 60,
                "mutability": "mutable",
                "name": "time",
                "nameLocation": "729:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "722:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 59,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "722:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "newQuoteNew",
                "nameLocation": "750:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "743:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 61,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "743:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "byUser",
                "nameLocation": "778:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "771:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 63,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "771:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "userAddress",
                "nameLocation": "802:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 67,
                "src": "794:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 65,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "794:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "newQuote",
            "nameLocation": "703:8:0",
            "nodeType": "StructDefinition",
            "scope": 284,
            "src": "696:124:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "365b98b2",
            "id": 72,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "862:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "826:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_newUser_$58_storage_$",
              "typeString": "mapping(uint256 => struct Quote.newUser)"
            },
            "typeName": {
              "id": 71,
              "keyType": {
                "id": 68,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "835:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "826:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_newUser_$58_storage_$",
                "typeString": "mapping(uint256 => struct Quote.newUser)"
              },
              "valueType": {
                "id": 70,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 69,
                  "name": "newUser",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "846:7:0"
                },
                "referencedDeclaration": 58,
                "src": "846:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_newUser_$58_storage_ptr",
                  "typeString": "struct Quote.newUser"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a61cf0d4",
            "id": 77,
            "mutability": "mutable",
            "name": "quotes",
            "nameLocation": "911:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "874:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_newQuote_$67_storage_$",
              "typeString": "mapping(uint256 => struct Quote.newQuote)"
            },
            "typeName": {
              "id": 76,
              "keyType": {
                "id": 73,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "883:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "874:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_newQuote_$67_storage_$",
                "typeString": "mapping(uint256 => struct Quote.newQuote)"
              },
              "valueType": {
                "id": 75,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 74,
                  "name": "newQuote",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 67,
                  "src": "894:8:0"
                },
                "referencedDeclaration": 67,
                "src": "894:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_newQuote_$67_storage_ptr",
                  "typeString": "struct Quote.newQuote"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "07973ccf",
            "id": 79,
            "mutability": "mutable",
            "name": "userCount",
            "nameLocation": "939:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "924:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 78,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "924:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4d1d1061",
            "id": 81,
            "mutability": "mutable",
            "name": "quoteCount",
            "nameLocation": "969:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 284,
            "src": "954:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 80,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "954:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1061:529:0",
              "statements": [
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "Quote",
                      "nameLocation": "1114:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "1098:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_newQuote_$67_memory_ptr",
                        "typeString": "struct Quote.newQuote"
                      },
                      "typeName": {
                        "id": 89,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88,
                          "name": "newQuote",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67,
                          "src": "1098:8:0"
                        },
                        "referencedDeclaration": 67,
                        "src": "1098:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_newQuote_$67_storage_ptr",
                          "typeString": "struct Quote.newQuote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1098:21:0"
                },
                {
                  "expression": {
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 92,
                        "name": "Quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1129:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_newQuote_$67_memory_ptr",
                          "typeString": "struct Quote.newQuote memory"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "time",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60,
                      "src": "1129:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 95,
                      "name": "_time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "1142:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1129:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1129:18:0"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98,
                        "name": "Quote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1157:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_newQuote_$67_memory_ptr",
                          "typeString": "struct Quote.newQuote memory"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "newQuoteNew",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62,
                      "src": "1157:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101,
                      "name": "_quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1177:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1157:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:26:0"
                },
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "_userName",
                      "nameLocation": "1208:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "1194:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1194:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 110,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1228:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1228:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 106,
                      "name": "exists1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "1220:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (address) view returns (string memory)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1194:45:0"
                },
                {
                  "assignments": [
                    112
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1254:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 151,
                      "src": "1249:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 111,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1249:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 117,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 114,
                        "name": "_userName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105,
                        "src": "1278:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "556e646566696e6564",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1289:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dc56eba614a0f0af64ea65a69d5367c2ffee099194e7461c170333602bf4314",
                          "typeString": "literal_string \"Undefined\""
                        },
                        "value": "Undefined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dc56eba614a0f0af64ea65a69d5367c2ffee099194e7461c170333602bf4314",
                          "typeString": "literal_string \"Undefined\""
                        }
                      ],
                      "id": 113,
                      "name": "compareStrings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "1263:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory,string memory) view returns (bool)"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1249:52:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 118,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "1315:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1325:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1315:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 149,
                    "nodeType": "Block",
                    "src": "1530:53:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "596f75206e65656420546f205369676e496e",
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1551:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3449d5f835b95413f0875a554373bf5ca4688d4610a50892c0f6501623eecc05",
                                "typeString": "literal_string \"You need To SignIn\""
                              },
                              "value": "You need To SignIn"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3449d5f835b95413f0875a554373bf5ca4688d4610a50892c0f6501623eecc05",
                                "typeString": "literal_string \"You need To SignIn\""
                              }
                            ],
                            "id": 145,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1544:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 148,
                        "nodeType": "ExpressionStatement",
                        "src": "1544:28:0"
                      }
                    ]
                  },
                  "id": 150,
                  "nodeType": "IfStatement",
                  "src": "1311:272:0",
                  "trueBody": {
                    "id": 144,
                    "nodeType": "Block",
                    "src": "1330:194:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 121,
                              "name": "quotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "1344:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_newQuote_$67_storage_$",
                                "typeString": "mapping(uint256 => struct Quote.newQuote storage ref)"
                              }
                            },
                            "id": 123,
                            "indexExpression": {
                              "id": 122,
                              "name": "quoteCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "1351:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1344:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_newQuote_$67_storage",
                              "typeString": "struct Quote.newQuote storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 125,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "1374:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 126,
                                "name": "_quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "1381:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 127,
                                "name": "_userName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "1389:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 128,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1400:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1400:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 124,
                              "name": "newQuote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1365:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_newQuote_$67_storage_ptr_$",
                                "typeString": "type(struct Quote.newQuote storage pointer)"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1365:46:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_newQuote_$67_memory_ptr",
                              "typeString": "struct Quote.newQuote memory"
                            }
                          },
                          "src": "1344:67:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newQuote_$67_storage",
                            "typeString": "struct Quote.newQuote storage ref"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "1344:67:0"
                      },
                      {
                        "expression": {
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1425:12:0",
                          "subExpression": {
                            "id": 133,
                            "name": "quoteCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "1425:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "1425:12:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "_time",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "1476:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 138,
                              "name": "_quote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "1483:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 139,
                              "name": "_userName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "1491:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 140,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1502:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1502:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 136,
                            "name": "quoteUploadedByUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "1456:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,string memory,string memory,address)"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1456:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 143,
                        "nodeType": "EmitStatement",
                        "src": "1451:62:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8e95da30",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setQuoteLatest",
            "nameLocation": "996:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_time",
                  "nameLocation": "1025:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1011:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_quote",
                  "nameLocation": "1046:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1032:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:43:0"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1061:0:0"
            },
            "scope": 284,
            "src": "987:603:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "1660:220:0",
              "statements": [
                {
                  "assignments": [
                    163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 163,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1688:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 198,
                      "src": "1670:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_newQuote_$67_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Quote.newQuote[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 161,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 160,
                            "name": "newQuote",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 67,
                            "src": "1670:8:0"
                          },
                          "referencedDeclaration": 67,
                          "src": "1670:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newQuote_$67_storage_ptr",
                            "typeString": "struct Quote.newQuote"
                          }
                        },
                        "id": 162,
                        "nodeType": "ArrayTypeName",
                        "src": "1670:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_newQuote_$67_storage_$dyn_storage_ptr",
                          "typeString": "struct Quote.newQuote[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 170,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 168,
                        "name": "quoteCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1708:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1693:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_newQuote_$67_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Quote.newQuote memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 165,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 164,
                            "name": "newQuote",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 67,
                            "src": "1697:8:0"
                          },
                          "referencedDeclaration": 67,
                          "src": "1697:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newQuote_$67_storage_ptr",
                            "typeString": "struct Quote.newQuote"
                          }
                        },
                        "id": 166,
                        "nodeType": "ArrayTypeName",
                        "src": "1697:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_newQuote_$67_storage_$dyn_storage_ptr",
                          "typeString": "struct Quote.newQuote[]"
                        }
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_newQuote_$67_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Quote.newQuote memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1670:49:0"
                },
                {
                  "body": {
                    "id": 194,
                    "nodeType": "Block",
                    "src": "1767:88:0",
                    "statements": [
                      {
                        "assignments": [
                          183
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 183,
                            "mutability": "mutable",
                            "name": "quoteQ",
                            "nameLocation": "1798:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 194,
                            "src": "1781:23:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_newQuote_$67_storage_ptr",
                              "typeString": "struct Quote.newQuote"
                            },
                            "typeName": {
                              "id": 182,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 181,
                                "name": "newQuote",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 67,
                                "src": "1781:8:0"
                              },
                              "referencedDeclaration": 67,
                              "src": "1781:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_newQuote_$67_storage_ptr",
                                "typeString": "struct Quote.newQuote"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 187,
                        "initialValue": {
                          "baseExpression": {
                            "id": 184,
                            "name": "quotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1807:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_newQuote_$67_storage_$",
                              "typeString": "mapping(uint256 => struct Quote.newQuote storage ref)"
                            }
                          },
                          "id": 186,
                          "indexExpression": {
                            "id": 185,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "1814:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1807:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newQuote_$67_storage",
                            "typeString": "struct Quote.newQuote storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1781:35:0"
                      },
                      {
                        "expression": {
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 188,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "1830:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_newQuote_$67_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Quote.newQuote memory[] memory"
                              }
                            },
                            "id": 190,
                            "indexExpression": {
                              "id": 189,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "1833:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1830:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_newQuote_$67_memory_ptr",
                              "typeString": "struct Quote.newQuote memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 191,
                            "name": "quoteQ",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "1838:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_newQuote_$67_storage_ptr",
                              "typeString": "struct Quote.newQuote storage pointer"
                            }
                          },
                          "src": "1830:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newQuote_$67_memory_ptr",
                            "typeString": "struct Quote.newQuote memory"
                          }
                        },
                        "id": 193,
                        "nodeType": "ExpressionStatement",
                        "src": "1830:14:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 175,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "1746:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 176,
                      "name": "quoteCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1750:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1746:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 195,
                  "initializationExpression": {
                    "assignments": [
                      172
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1739:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "1734:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1734:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 174,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1743:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1734:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1762:3:0",
                      "subExpression": {
                        "id": 178,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "1762:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 180,
                    "nodeType": "ExpressionStatement",
                    "src": "1762:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1729:126:0"
                },
                {
                  "expression": {
                    "id": 196,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 163,
                    "src": "1871:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_newQuote_$67_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Quote.newQuote memory[] memory"
                    }
                  },
                  "functionReturnParameters": 158,
                  "id": 197,
                  "nodeType": "Return",
                  "src": "1864:9:0"
                }
              ]
            },
            "functionSelector": "f9d3c3ec",
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getQuoteByUser",
            "nameLocation": "1605:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1619:2:0"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "1642:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_newQuote_$67_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Quote.newQuote[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 155,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 154,
                        "name": "newQuote",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 67,
                        "src": "1642:8:0"
                      },
                      "referencedDeclaration": 67,
                      "src": "1642:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_newQuote_$67_storage_ptr",
                        "typeString": "struct Quote.newQuote"
                      }
                    },
                    "id": 156,
                    "nodeType": "ArrayTypeName",
                    "src": "1642:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_newQuote_$67_storage_$dyn_storage_ptr",
                      "typeString": "struct Quote.newQuote[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1641:19:0"
            },
            "scope": 284,
            "src": "1596:284:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "1969:348:0",
              "statements": [
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1993:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "1979:20:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1979:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 209,
                        "name": "_walletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2010:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 208,
                      "name": "exists1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "2002:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (address) view returns (string memory)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2002:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1979:46:0"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 213,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "2064:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "556e646566696e6564",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2072:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dc56eba614a0f0af64ea65a69d5367c2ffee099194e7461c170333602bf4314",
                          "typeString": "literal_string \"Undefined\""
                        },
                        "value": "Undefined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dc56eba614a0f0af64ea65a69d5367c2ffee099194e7461c170333602bf4314",
                          "typeString": "literal_string \"Undefined\""
                        }
                      ],
                      "id": 212,
                      "name": "compareStrings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2049:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory,string memory) view returns (bool)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2049:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 245,
                  "nodeType": "IfStatement",
                  "src": "2045:266:0",
                  "trueBody": {
                    "id": 244,
                    "nodeType": "Block",
                    "src": "2086:225:0",
                    "statements": [
                      {
                        "assignments": [
                          218
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 218,
                            "mutability": "mutable",
                            "name": "User",
                            "nameLocation": "2115:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 244,
                            "src": "2100:19:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_newUser_$58_memory_ptr",
                              "typeString": "struct Quote.newUser"
                            },
                            "typeName": {
                              "id": 217,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 216,
                                "name": "newUser",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 58,
                                "src": "2100:7:0"
                              },
                              "referencedDeclaration": 58,
                              "src": "2100:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_newUser_$58_storage_ptr",
                                "typeString": "struct Quote.newUser"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 219,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2100:19:0"
                      },
                      {
                        "expression": {
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 220,
                              "name": "User",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "2133:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_newUser_$58_memory_ptr",
                                "typeString": "struct Quote.newUser memory"
                              }
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "userName",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55,
                            "src": "2133:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 223,
                            "name": "_userName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "2149:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2133:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 225,
                        "nodeType": "ExpressionStatement",
                        "src": "2133:25:0"
                      },
                      {
                        "expression": {
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 226,
                              "name": "User",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "2172:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_newUser_$58_memory_ptr",
                                "typeString": "struct Quote.newUser memory"
                              }
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "walletAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "2172:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 229,
                            "name": "_walletAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 201,
                            "src": "2193:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2172:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 231,
                        "nodeType": "ExpressionStatement",
                        "src": "2172:35:0"
                      },
                      {
                        "expression": {
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 232,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72,
                              "src": "2222:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_newUser_$58_storage_$",
                                "typeString": "mapping(uint256 => struct Quote.newUser storage ref)"
                              }
                            },
                            "id": 234,
                            "indexExpression": {
                              "id": 233,
                              "name": "userCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "2228:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2222:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_newUser_$58_storage",
                              "typeString": "struct Quote.newUser storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 236,
                                "name": "_userName",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 203,
                                "src": "2249:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 237,
                                "name": "_walletAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "2260:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 235,
                              "name": "newUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "2241:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_newUser_$58_storage_ptr_$",
                                "typeString": "type(struct Quote.newUser storage pointer)"
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2241:34:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_newUser_$58_memory_ptr",
                              "typeString": "struct Quote.newUser memory"
                            }
                          },
                          "src": "2222:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newUser_$58_storage",
                            "typeString": "struct Quote.newUser storage ref"
                          }
                        },
                        "id": 240,
                        "nodeType": "ExpressionStatement",
                        "src": "2222:53:0"
                      },
                      {
                        "expression": {
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2289:11:0",
                          "subExpression": {
                            "id": 241,
                            "name": "userCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "2289:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 243,
                        "nodeType": "ExpressionStatement",
                        "src": "2289:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b8c30963",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewUser",
            "nameLocation": "1902:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "_walletAddress",
                  "nameLocation": "1921:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "1913:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "_userName",
                  "nameLocation": "1951:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "1937:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:49:0"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1969:0:0"
            },
            "scope": 284,
            "src": "1893:424:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "2391:202:0",
              "statements": [
                {
                  "body": {
                    "id": 278,
                    "nodeType": "Block",
                    "src": "2440:118:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 264,
                                "name": "users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72,
                                "src": "2458:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_newUser_$58_storage_$",
                                  "typeString": "mapping(uint256 => struct Quote.newUser storage ref)"
                                }
                              },
                              "id": 266,
                              "indexExpression": {
                                "id": 265,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 255,
                                "src": "2464:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2458:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_newUser_$58_storage",
                                "typeString": "struct Quote.newUser storage ref"
                              }
                            },
                            "id": 267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "walletAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "2458:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 268,
                            "name": "num",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "2484:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2458:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 277,
                        "nodeType": "IfStatement",
                        "src": "2454:94:0",
                        "trueBody": {
                          "id": 276,
                          "nodeType": "Block",
                          "src": "2489:59:0",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 270,
                                        "name": "users",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 72,
                                        "src": "2515:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_newUser_$58_storage_$",
                                          "typeString": "mapping(uint256 => struct Quote.newUser storage ref)"
                                        }
                                      },
                                      "id": 272,
                                      "indexExpression": {
                                        "id": 271,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 255,
                                        "src": "2521:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2515:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_newUser_$58_storage",
                                        "typeString": "struct Quote.newUser storage ref"
                                      }
                                    },
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "userName",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 55,
                                    "src": "2515:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "id": 274,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2514:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "functionReturnParameters": 253,
                              "id": 275,
                              "nodeType": "Return",
                              "src": "2507:26:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 258,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "2420:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 259,
                      "name": "userCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2424:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2420:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 279,
                  "initializationExpression": {
                    "assignments": [
                      255
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2413:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "2408:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2408:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 257,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2417:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2408:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2435:3:0",
                      "subExpression": {
                        "id": 261,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "2435:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 263,
                    "nodeType": "ExpressionStatement",
                    "src": "2435:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2403:155:0"
                },
                {
                  "expression": {
                    "hexValue": "556e646566696e6564",
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2575:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8dc56eba614a0f0af64ea65a69d5367c2ffee099194e7461c170333602bf4314",
                      "typeString": "literal_string \"Undefined\""
                    },
                    "value": "Undefined"
                  },
                  "functionReturnParameters": 253,
                  "id": 281,
                  "nodeType": "Return",
                  "src": "2568:18:0"
                }
              ]
            },
            "functionSelector": "ae48e1c6",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists1",
            "nameLocation": "2334:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "num",
                  "nameLocation": "2350:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "2342:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2342:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2341:13:0"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "2376:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2376:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2375:15:0"
            },
            "scope": 284,
            "src": "2325:268:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 285,
        "src": "58:2539:0",
        "usedErrors": []
      }
    ],
    "src": "33:2564:0"
  },
  "bytecode": "",
  "bytecodeSha1": "d71296ec906bd90d904c69a49f7b36fb4ed2785e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Quote",
  "coverageMap": {
    "branches": {
      "0": {
        "Quote.addNewUser": {
          "19": [
            2049,
            2084,
            false
          ]
        },
        "Quote.exists1": {
          "18": [
            2458,
            2487,
            false
          ]
        },
        "Quote.setQuoteLatest": {
          "17": [
            1315,
            1329,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Quote.addNewUser": {
          "9": [
            2133,
            2158
          ],
          "10": [
            2172,
            2207
          ],
          "11": [
            2222,
            2275
          ],
          "12": [
            2289,
            2300
          ]
        },
        "Quote.compareStrings": {
          "13": [
            523,
            600
          ]
        },
        "Quote.exists1": {
          "6": [
            2507,
            2533
          ],
          "7": [
            2435,
            2438
          ],
          "8": [
            2568,
            2586
          ]
        },
        "Quote.getQuoteByUser": {
          "14": [
            1830,
            1844
          ],
          "15": [
            1762,
            1765
          ],
          "16": [
            1864,
            1873
          ]
        },
        "Quote.setQuoteLatest": {
          "0": [
            1129,
            1147
          ],
          "1": [
            1157,
            1183
          ],
          "2": [
            1344,
            1411
          ],
          "3": [
            1425,
            1437
          ],
          "4": [
            1451,
            1513
          ],
          "5": [
            1544,
            1572
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "58:2539:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;924:24;;;;;;;;;160:25:1;;;148:2;133:18;924:24:0;;;;;;;;826:41;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;954:25::-;;;;;;987:603;;;;;;:::i;:::-;;:::i;:::-;;874:43;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2325:268::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1893:424::-;;;;;;:::i;:::-;;:::i;431:176::-;;;;;;:::i;:::-;;:::i;:::-;;;4443:14:1;;4436:22;4418:41;;4406:2;4391:18;431:176:0;4278:187:1;1596:284:0;;;:::i;:::-;;;;;;;:::i;826:41::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;826:41:0;;;;;;;-1:-1:-1;;;;;;;826:41:0;;:::o;987:603::-;1098:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1098:21:0;1129:18;;;1157:17;;;:26;;;1129:10;1220:19;1228:10;1220:7;:19::i;:::-;1194:45;;1249:11;1263:38;1278:9;1263:38;;;;;;;;;;;;;-1:-1:-1;;;1263:38:0;;;:14;:38::i;:::-;1249:52;-1:-1:-1;1325:4:0;1315:14;;;;1311:272;;1365:46;;;;;;;;;;;;;;;;;;;;;;;;1400:10;1365:46;;;;1351:10;;-1:-1:-1;1344:18:0;;;:6;:18;;;;;;;:67;;:18;;:67;;:18;:67;:::i;:::-;-1:-1:-1;1344:67:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1344:67:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1344:67:0;;;;;;;;;;;;-1:-1:-1;;;;;;1344:67:0;-1:-1:-1;;;;;1344:67:0;;;;;;;;;1425:10;:12;;;-1:-1:-1;1425:12:0;;;:::i;:::-;;;;;;1456:57;1476:5;1483:6;1491:9;1502:10;1456:57;;;;;;;;;:::i;:::-;;;;;;;;1311:272;;;1544:28;;-1:-1:-1;;;1544:28:0;;8997:2:1;1544:28:0;;;8979:21:1;9036:2;9016:18;;;9009:30;-1:-1:-1;;;9055:18:1;;;9048:48;9113:18;;1544:28:0;;;;;;;1311:272;1061:529;;;987:603;;:::o;874:43::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;874:43:0;;;;;;;-1:-1:-1;;;;;;;874:43:0;;:::o;2325:268::-;2376:13;2408:6;2403:155;2424:9;;2420:1;:13;2403:155;;;2458:8;;;;:5;:8;;;;;;;;:22;;-1:-1:-1;;;;;2458:29:0;;;:22;;:29;2454:94;;2515:8;;;;:5;:8;;;;;2507:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2325:268;;;:::o;2454:94::-;2435:3;;;;:::i;:::-;;;;2403:155;;;-1:-1:-1;;2568:18:0;;;;;;;;;;;;-1:-1:-1;;;2568:18:0;;;;;2325:268;-1:-1:-1;2325:268:0:o;1893:424::-;1979:20;2002:23;2010:14;2002:7;:23::i;:::-;1979:46;;2049:35;2064:6;2049:35;;;;;;;;;;;;;-1:-1:-1;;;2049:35:0;;;:14;:35::i;:::-;2045:266;;;-1:-1:-1;;;;;;;;2133:25:0;;;-1:-1:-1;;;;;2172:35:0;;-1:-1:-1;;;;2172:35:0;;;2241:34;;;;;;;;;;;;;;;;;2228:9;;-1:-1:-1;2222:16:0;;;:5;:16;;;;;;;:53;;-1:-1:-1;;2241:34:0;2222:16;;:53;;:16;:53;:::i;:::-;-1:-1:-1;2222:53:0;;;;;;;;;;;;-1:-1:-1;;;;;;2222:53:0;-1:-1:-1;;;;;2222:53:0;;;;;;;;;2289:9;:11;;;-1:-1:-1;2289:11:0;;;:::i;:::-;;;;;;2086:225;2045:266;1969:348;1893:424;;:::o;431:176::-;511:4;595:1;577:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;567:32;;;;;;559:1;541:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;531:32;;;;;;:68;523:77;;431:176;;;;:::o;1596:284::-;1642:17;1670:20;1708:10;;1693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1693:26:0;;;;;;;;;;;;;;;;;1670:49;;1734:6;1729:126;1750:10;;1746:1;:14;1729:126;;;1781:23;1807:9;;;:6;:9;;;;;;;1830:14;;;;;;;;;;1807:9;;1830:14;1807:9;;1830:14;;1807:9;;1830:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1830:14:0;;;-1:-1:-1;;1830:14:0;;;;;;-1:-1:-1;;;;;1830:14:0;;;;;;:5;;:2;;1833:1;;1830:5;;;;;;:::i;:::-;;;;;;:14;;;;1767:88;1762:3;;;;;:::i;:::-;;;;1729:126;;;-1:-1:-1;1871:2:0;1596:284;-1:-1:-1;1596:284:0:o;196:180:1:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:1;;196:180;-1:-1:-1;196:180:1:o;381:258::-;453:1;463:113;477:6;474:1;471:13;463:113;;;553:11;;;547:18;534:11;;;527:39;499:2;492:10;463:113;;;594:6;591:1;588:13;585:48;;;629:1;620:6;615:3;611:16;604:27;585:48;;381:258;;;:::o;644:::-;686:3;724:5;718:12;751:6;746:3;739:19;767:63;823:6;816:4;811:3;807:14;800:4;793:5;789:16;767:63;:::i;:::-;884:2;863:15;-1:-1:-1;;859:29:1;850:39;;;;891:4;846:50;;644:258;-1:-1:-1;;644:258:1:o;907:317::-;1084:2;1073:9;1066:21;1047:4;1104:45;1145:2;1134:9;1130:18;1122:6;1104:45;:::i;:::-;1096:53;;1214:1;1210;1205:3;1201:11;1197:19;1189:6;1185:32;1180:2;1169:9;1165:18;1158:60;907:317;;;;;:::o;1229:127::-;1290:10;1285:3;1281:20;1278:1;1271:31;1321:4;1318:1;1311:15;1345:4;1342:1;1335:15;1361:719;1404:5;1457:3;1450:4;1442:6;1438:17;1434:27;1424:55;;1475:1;1472;1465:12;1424:55;1511:6;1498:20;1537:18;1574:2;1570;1567:10;1564:36;;;1580:18;;:::i;:::-;1655:2;1649:9;1623:2;1709:13;;-1:-1:-1;;1705:22:1;;;1729:2;1701:31;1697:40;1685:53;;;1753:18;;;1773:22;;;1750:46;1747:72;;;1799:18;;:::i;:::-;1839:10;1835:2;1828:22;1874:2;1866:6;1859:18;1920:3;1913:4;1908:2;1900:6;1896:15;1892:26;1889:35;1886:55;;;1937:1;1934;1927:12;1886:55;2001:2;1994:4;1986:6;1982:17;1975:4;1967:6;1963:17;1950:54;2048:1;2041:4;2036:2;2028:6;2024:15;2020:26;2013:37;2068:6;2059:15;;;;;;1361:719;;;;:::o;2085:543::-;2173:6;2181;2234:2;2222:9;2213:7;2209:23;2205:32;2202:52;;;2250:1;2247;2240:12;2202:52;2290:9;2277:23;2319:18;2360:2;2352:6;2349:14;2346:34;;;2376:1;2373;2366:12;2346:34;2399:50;2441:7;2432:6;2421:9;2417:22;2399:50;:::i;:::-;2389:60;;2502:2;2491:9;2487:18;2474:32;2458:48;;2531:2;2521:8;2518:16;2515:36;;;2547:1;2544;2537:12;2515:36;;2570:52;2614:7;2603:8;2592:9;2588:24;2570:52;:::i;:::-;2560:62;;;2085:543;;;;;:::o;2633:645::-;2906:3;2895:9;2888:22;2869:4;2933:46;2974:3;2963:9;2959:19;2951:6;2933:46;:::i;:::-;3027:9;3019:6;3015:22;3010:2;2999:9;2995:18;2988:50;3061:33;3087:6;3079;3061:33;:::i;:::-;3047:47;;3142:9;3134:6;3130:22;3125:2;3114:9;3110:18;3103:50;3170:33;3196:6;3188;3170:33;:::i;:::-;3162:41;;;3268:1;3264;3259:3;3255:11;3251:19;3243:6;3239:32;3234:2;3223:9;3219:18;3212:60;2633:645;;;;;;;:::o;3283:173::-;3351:20;;-1:-1:-1;;;;;3400:31:1;;3390:42;;3380:70;;3446:1;3443;3436:12;3380:70;3283:173;;;:::o;3461:186::-;3520:6;3573:2;3561:9;3552:7;3548:23;3544:32;3541:52;;;3589:1;3586;3579:12;3541:52;3612:29;3631:9;3612:29;:::i;:::-;3602:39;3461:186;-1:-1:-1;;;3461:186:1:o;3652:220::-;3801:2;3790:9;3783:21;3764:4;3821:45;3862:2;3851:9;3847:18;3839:6;3821:45;:::i;3877:396::-;3955:6;3963;4016:2;4004:9;3995:7;3991:23;3987:32;3984:52;;;4032:1;4029;4022:12;3984:52;4055:29;4074:9;4055:29;:::i;:::-;4045:39;;4135:2;4124:9;4120:18;4107:32;4162:18;4154:6;4151:30;4148:50;;;4194:1;4191;4184:12;4148:50;4217;4259:7;4250:6;4239:9;4235:22;4217:50;:::i;4470:1494::-;4660:4;4689:2;4729;4718:9;4714:18;4759:2;4748:9;4741:21;4782:6;4817;4811:13;4848:6;4840;4833:22;4874:2;4864:12;;4907:2;4896:9;4892:18;4885:25;;4969:2;4959:6;4956:1;4952:14;4941:9;4937:30;4933:39;5007:2;4999:6;4995:15;5028:1;5038:897;5052:6;5049:1;5046:13;5038:897;;;5145:2;5141:7;5129:9;5121:6;5117:22;5113:36;5108:3;5101:49;5179:6;5173:13;5209:4;5252:2;5246:9;5283:2;5275:6;5268:18;5313:48;5357:2;5349:6;5345:15;5331:12;5313:48;:::i;:::-;5299:62;;;5410:2;5406;5402:11;5396:18;5463:6;5455;5451:19;5446:2;5438:6;5434:15;5427:44;5498:41;5532:6;5516:14;5498:41;:::i;:::-;5484:55;;;5588:2;5584;5580:11;5574:18;5641:6;5633;5629:19;5624:2;5616:6;5612:15;5605:44;5676:41;5710:6;5694:14;5676:41;:::i;:::-;5740:4;5791:11;;;5785:18;-1:-1:-1;;;;;5781:44:1;5764:15;;;;5757:69;;;;-1:-1:-1;5913:12:1;;;;5662:55;-1:-1:-1;5878:15:1;;;;5822:1;5067:9;5038:897;;;-1:-1:-1;5952:6:1;;4470:1494;-1:-1:-1;;;;;;;;4470:1494:1:o;5969:380::-;6048:1;6044:12;;;;6091;;;6112:61;;6166:4;6158:6;6154:17;6144:27;;6112:61;6219:2;6211:6;6208:14;6188:18;6185:38;6182:161;;6265:10;6260:3;6256:20;6253:1;6246:31;6300:4;6297:1;6290:15;6328:4;6325:1;6318:15;6480:545;6582:2;6577:3;6574:11;6571:448;;;6618:1;6643:5;6639:2;6632:17;6688:4;6684:2;6674:19;6758:2;6746:10;6742:19;6739:1;6735:27;6729:4;6725:38;6794:4;6782:10;6779:20;6776:47;;;-1:-1:-1;6817:4:1;6776:47;6872:2;6867:3;6863:12;6860:1;6856:20;6850:4;6846:31;6836:41;;6927:82;6945:2;6938:5;6935:13;6927:82;;;6990:17;;;6971:1;6960:13;6927:82;;;6931:3;;;6480:545;;;:::o;7201:1352::-;7327:3;7321:10;7354:18;7346:6;7343:30;7340:56;;;7376:18;;:::i;:::-;7405:97;7495:6;7455:38;7487:4;7481:11;7455:38;:::i;:::-;7449:4;7405:97;:::i;:::-;7557:4;;7621:2;7610:14;;7638:1;7633:663;;;;8340:1;8357:6;8354:89;;;-1:-1:-1;8409:19:1;;;8403:26;8354:89;-1:-1:-1;;7158:1:1;7154:11;;;7150:24;7146:29;7136:40;7182:1;7178:11;;;7133:57;8456:81;;7603:944;;7633:663;6427:1;6420:14;;;6464:4;6451:18;;-1:-1:-1;;7669:20:1;;;7787:236;7801:7;7798:1;7795:14;7787:236;;;7890:19;;;7884:26;7869:42;;7982:27;;;;7950:1;7938:14;;;;7817:19;;7787:236;;;7791:3;8051:6;8042:7;8039:19;8036:201;;;8112:19;;;8106:26;-1:-1:-1;;8195:1:1;8191:14;;;8207:3;8187:24;8183:37;8179:42;8164:58;8149:74;;8036:201;-1:-1:-1;;;;;8283:1:1;8267:14;;;8263:22;8250:36;;-1:-1:-1;7201:1352:1:o;8558:232::-;8597:3;8618:17;;;8615:140;;8677:10;8672:3;8668:20;8665:1;8658:31;8712:4;8709:1;8702:15;8740:4;8737:1;8730:15;8615:140;-1:-1:-1;8782:1:1;8771:13;;8558:232::o;9142:276::-;9273:3;9311:6;9305:13;9327:53;9373:6;9368:3;9361:4;9353:6;9349:17;9327:53;:::i;:::-;9396:16;;;;;9142:276;-1:-1:-1;;9142:276:1:o;9423:127::-;9484:10;9479:3;9475:20;9472:1;9465:31;9515:4;9512:1;9505:15;9539:4;9536:1;9529:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    2597
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA61CF0D4 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA61CF0D4 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xAE48E1C6 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0xB8C30963 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xBED34BBA EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0xF9D3C3EC EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7973CCF EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x365B98B2 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x4D1D1061 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x8E95DA30 EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH2 0xC2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP3 SWAP2 SWAP1 PUSH2 0xB11 JUMP JUMPDEST PUSH2 0xA1 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0xA9C JUMP JUMPDEST PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH2 0x129 PUSH2 0x124 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB1 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE6 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAB JUMP JUMPDEST PUSH2 0x174 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x19C SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C8 SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x215 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x215 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x262 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH2 0x277 CALLER PUSH2 0x5AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x155B9919599A5B9959 PUSH1 0xBA SHL DUP2 MSTORE POP PUSH2 0x78E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 ISZERO ISZERO EQ PUSH2 0x39D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE CALLER PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x2F2 SWAP1 DUP3 PUSH2 0xE61 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x307 SWAP1 DUP3 PUSH2 0xE61 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x31C SWAP1 DUP3 PUSH2 0xE61 JUMP JUMPDEST POP PUSH1 0x60 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x356 DUP4 PUSH2 0xF21 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x2A57895AABD94CBC9FD7D516FABEB441A142EC4F6D4AABF649A43E2A7B12D586 DUP6 DUP6 DUP5 CALLER PUSH1 0x40 MLOAD PUSH2 0x390 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA903732B2B2102A379029B4B3B724B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x400 SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x479 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x479 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x48E SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BA SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x507 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x507 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x51C SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x548 SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND SUB PUSH2 0x681 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x5FB SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x627 SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x674 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x649 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x674 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x657 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH2 0x68B DUP2 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5B3 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x155B9919599A5B9959 PUSH1 0xBA SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C5 DUP4 PUSH2 0x5AE JUMP JUMPDEST SWAP1 POP PUSH2 0x6F2 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x155B9919599A5B9959 PUSH1 0xBA SHL DUP2 MSTORE POP PUSH2 0x78E JUMP JUMPDEST ISZERO PUSH2 0x789 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE DUP7 DUP2 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP3 MLOAD SWAP2 SWAP3 SWAP2 DUP2 SWAP1 PUSH2 0x748 SWAP1 DUP3 PUSH2 0xE61 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x782 DUP4 PUSH2 0xF21 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7A1 SWAP2 SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7C8 SWAP2 SWAP1 PUSH2 0xF48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x806 JUMPI PUSH2 0x806 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x86B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x858 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x824 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xA96 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x8A8 SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D4 SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x921 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x921 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x904 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x93A SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x966 SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x988 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x996 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x9CC SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F8 SWAP1 PUSH2 0xDDF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA45 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA45 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA28 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xA77 JUMPI PUSH2 0xA77 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0xA8E SWAP1 PUSH2 0xF21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x871 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAD0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAB8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xAFD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB24 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xAE5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB7D JUMPI PUSH2 0xB7D PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA5 PUSH2 0xB3B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC15 DUP7 DUP4 DUP8 ADD PUSH2 0xB51 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xC2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC38 DUP6 DUP3 DUP7 ADD PUSH2 0xB51 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC55 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xAE5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC67 DUP2 DUP8 PUSH2 0xAE5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xC7B DUP2 DUP7 PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCC DUP3 PUSH2 0xC95 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xCCC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD02 DUP4 PUSH2 0xC95 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC38 DUP6 DUP3 DUP7 ADD PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDD1 JUMPI PUSH1 0x3F NOT DUP10 DUP5 SUB ADD DUP6 MSTORE DUP2 MLOAD PUSH1 0x80 DUP2 MLOAD DUP2 DUP7 MSTORE PUSH2 0xD77 DUP3 DUP8 ADD DUP3 PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP POP DUP9 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP11 DUP8 ADD MSTORE PUSH2 0xD8F DUP3 DUP3 PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP POP DUP8 DUP3 ADD MLOAD DUP6 DUP3 SUB DUP10 DUP8 ADD MSTORE PUSH2 0xDA7 DUP3 DUP3 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x60 SWAP4 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP7 SWAP1 SWAP4 ADD SWAP6 SWAP1 SWAP6 MSTORE POP SWAP5 DUP8 ADD SWAP5 SWAP3 POP SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD51 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDF3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA96 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0xE3A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE59 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE46 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE7B JUMPI PUSH2 0xE7B PUSH2 0xB3B JUMP JUMPDEST PUSH2 0xE8F DUP2 PUSH2 0xE89 DUP5 SLOAD PUSH2 0xDDF JUMP JUMPDEST DUP5 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xEC4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xEAC JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEF3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xED4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xF11 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF41 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xF5A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xAB5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS CALLVALUE PUSH3 0x3DDBEC INVALID 0x5C CALLER 0xAA ADDRESS DUP12 0xDA 0xAD 0xB9 0xAF 0xC8 0xF7 0xED 0xD3 0xAB SWAP3 0x2A NUMBER 0xC9 CALLCODE PUSH13 0x63D67A414E64736F6C63430008 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA61CF0D4"
    },
    "38": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA61CF0D4"
    },
    "49": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "53": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAE48E1C6"
    },
    "60": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116"
    },
    "64": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB8C30963"
    },
    "71": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x136"
    },
    "75": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBED34BBA"
    },
    "82": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149"
    },
    "86": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF9D3C3EC"
    },
    "93": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C"
    },
    "97": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7973CCF"
    },
    "109": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x365B98B2"
    },
    "120": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "124": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4D1D1061"
    },
    "131": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5"
    },
    "135": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8E95DA30"
    },
    "142": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE"
    },
    "146": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        2597
      ],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "offset": [
        924,
        948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1"
    },
    "156": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "158": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "DUP2",
      "path": "0"
    },
    "160": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "JUMP",
      "path": "0"
    },
    "161": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "164": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "165": {
      "op": "SWAP1"
    },
    "166": {
      "op": "DUP2"
    },
    "167": {
      "op": "MSTORE"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "170": {
      "op": "ADD"
    },
    "171": {
      "offset": [
        924,
        948
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "174": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "DUP1",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "177": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "SUB",
      "path": "0"
    },
    "178": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        924,
        948
      ],
      "op": "RETURN",
      "path": "0"
    },
    "180": {
      "offset": [
        826,
        867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7"
    },
    "184": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2"
    },
    "187": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "188": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "190": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9C"
    },
    "193": {
      "fn": null,
      "jump": "i",
      "offset": [
        826,
        867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "198": {
      "fn": null,
      "jump": "i",
      "offset": [
        826,
        867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "202": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "206": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "209": {
      "fn": null,
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB11"
    },
    "212": {
      "fn": null,
      "jump": "i",
      "offset": [
        826,
        867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "213": {
      "offset": [
        954,
        979
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        954,
        979
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1"
    },
    "217": {
      "fn": null,
      "offset": [
        954,
        979
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "219": {
      "fn": null,
      "offset": [
        954,
        979
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "220": {
      "fn": null,
      "offset": [
        954,
        979
      ],
      "op": "DUP2",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        954,
        979
      ],
      "op": "JUMP",
      "path": "0"
    },
    "222": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "223": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1"
    },
    "226": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC"
    },
    "229": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "230": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "232": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDE"
    },
    "235": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        987,
        1590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "236": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "237": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22E"
    },
    "240": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        987,
        1590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "241": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "242": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "STOP",
      "path": "0"
    },
    "243": {
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106"
    },
    "247": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x101"
    },
    "250": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "251": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "253": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9C"
    },
    "256": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "257": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "258": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E5"
    },
    "261": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "262": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "263": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "265": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "266": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "269": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "270": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "271": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "272": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "273": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "274": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC42"
    },
    "277": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "278": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "279": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129"
    },
    "282": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "285": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "286": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "288": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB1"
    },
    "291": {
      "fn": "Quote.exists1",
      "jump": "i",
      "offset": [
        2325,
        2593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "292": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AE"
    },
    "296": {
      "fn": "Quote.exists1",
      "jump": "i",
      "offset": [
        2325,
        2593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "297": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "298": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "300": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "301": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "304": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "305": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "306": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD3"
    },
    "309": {
      "fn": "Quote.exists1",
      "jump": "i",
      "offset": [
        2325,
        2593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "310": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "311": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1"
    },
    "314": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "317": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "318": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "320": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE6"
    },
    "323": {
      "fn": "Quote.addNewUser",
      "jump": "i",
      "offset": [
        1893,
        2317
      ],
      "op": "JUMP",
      "path": "0"
    },
    "324": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "325": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BA"
    },
    "328": {
      "fn": "Quote.addNewUser",
      "jump": "i",
      "offset": [
        1893,
        2317
      ],
      "op": "JUMP",
      "path": "0"
    },
    "329": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "330": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "333": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x157"
    },
    "336": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "337": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "339": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDE"
    },
    "342": {
      "fn": "Quote.compareStrings",
      "jump": "i",
      "offset": [
        431,
        607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "343": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "344": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78E"
    },
    "347": {
      "fn": "Quote.compareStrings",
      "jump": "i",
      "offset": [
        431,
        607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "348": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "351": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "352": {
      "op": "SWAP1"
    },
    "353": {
      "op": "ISZERO"
    },
    "354": {
      "op": "ISZERO"
    },
    "355": {
      "op": "DUP2"
    },
    "356": {
      "op": "MSTORE"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "359": {
      "op": "ADD"
    },
    "360": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "363": {
      "op": "JUMP"
    },
    "364": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "365": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x174"
    },
    "368": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E7"
    },
    "371": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1596,
        1880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "372": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "373": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "375": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "376": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB"
    },
    "379": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "380": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "381": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD2A"
    },
    "384": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1596,
        1880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "385": {
      "offset": [
        826,
        867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "386": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "388": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "390": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "391": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "393": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "394": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "395": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "396": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "398": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "399": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "400": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "401": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "402": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "403": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "404": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19C"
    },
    "407": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "408": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "411": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        826,
        867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "412": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "413": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "414": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "416": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "417": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "419": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "420": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "421": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DIV",
      "path": "0"
    },
    "422": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MUL",
      "path": "0"
    },
    "423": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "425": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "426": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "428": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "429": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "430": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "431": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "432": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "434": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "435": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "436": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "437": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "438": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "439": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "440": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "441": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "442": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "444": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "445": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP3",
      "path": "0"
    },
    "446": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "447": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "448": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C8"
    },
    "451": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "452": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "455": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        826,
        867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "456": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "457": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "458": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "459": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215"
    },
    "462": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "463": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "464": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "466": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "LT",
      "path": "0"
    },
    "467": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "470": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "471": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "474": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "475": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP4",
      "path": "0"
    },
    "476": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "477": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DIV",
      "path": "0"
    },
    "478": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MUL",
      "path": "0"
    },
    "479": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP4",
      "path": "0"
    },
    "480": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "481": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "482": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "484": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "485": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "486": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215"
    },
    "489": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "490": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "491": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP3",
      "path": "0"
    },
    "492": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "493": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "494": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "495": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "497": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "498": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "500": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "502": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "503": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "504": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "505": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "506": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "507": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP2",
      "path": "0"
    },
    "508": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "509": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "510": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "512": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "513": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "514": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "516": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "517": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "518": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP4",
      "path": "0"
    },
    "519": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "GT",
      "path": "0"
    },
    "520": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8"
    },
    "523": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "524": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP3",
      "path": "0"
    },
    "525": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "526": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SUB",
      "path": "0"
    },
    "527": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "529": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "AND",
      "path": "0"
    },
    "530": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP3",
      "path": "0"
    },
    "531": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "532": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "533": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "op": "POP"
    },
    "535": {
      "op": "POP"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "offset": [
        826,
        867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "539": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "540": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "541": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "ADD",
      "path": "0"
    },
    "542": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "543": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "544": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "545": {
      "op": "POP"
    },
    "546": {
      "op": "POP"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "553": {
      "op": "SHL"
    },
    "554": {
      "op": "SUB"
    },
    "555": {
      "offset": [
        826,
        867
      ],
      "op": "AND",
      "path": "0"
    },
    "556": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        826,
        867
      ],
      "op": "DUP3",
      "path": "0"
    },
    "557": {
      "fn": "Quote.getQuoteByUser",
      "jump": "o",
      "offset": [
        826,
        867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "558": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "559": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1098,
        1119
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x262"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "564": {
      "op": "MLOAD"
    },
    "565": {
      "op": "DUP1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "568": {
      "op": "ADD"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "571": {
      "op": "MSTORE"
    },
    "572": {
      "op": "DUP1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "575": {
      "op": "DUP2"
    },
    "576": {
      "op": "MSTORE"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "579": {
      "op": "ADD"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "582": {
      "op": "DUP2"
    },
    "583": {
      "op": "MSTORE"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "586": {
      "op": "ADD"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "589": {
      "op": "DUP2"
    },
    "590": {
      "op": "MSTORE"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "593": {
      "op": "ADD"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "op": "SUB"
    },
    "604": {
      "op": "AND"
    },
    "605": {
      "op": "DUP2"
    },
    "606": {
      "op": "MSTORE"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "SWAP1"
    },
    "609": {
      "op": "JUMP"
    },
    "610": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1098,
        1119
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "611": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1129,
        1147
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 0
    },
    "612": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1129,
        1147
      ],
      "op": "DUP2",
      "path": "0"
    },
    "613": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1129,
        1147
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "614": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1157,
        1174
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x20"
    },
    "616": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1157,
        1174
      ],
      "op": "DUP2",
      "path": "0"
    },
    "617": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1157,
        1174
      ],
      "op": "ADD",
      "path": "0"
    },
    "618": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1157,
        1183
      ],
      "op": "DUP3",
      "path": "0"
    },
    "619": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1157,
        1183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "620": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1157,
        1183
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "621": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1129,
        1139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "623": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1220,
        1239
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277"
    },
    "626": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1228,
        1238
      ],
      "op": "CALLER",
      "path": "0"
    },
    "627": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1220,
        1227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AE"
    },
    "630": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        1220,
        1239
      ],
      "op": "JUMP",
      "path": "0"
    },
    "631": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1220,
        1239
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "632": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1194,
        1239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "633": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1194,
        1239
      ],
      "op": "POP",
      "path": "0"
    },
    "634": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1249,
        1260
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "636": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A6"
    },
    "639": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1278,
        1287
      ],
      "op": "DUP3",
      "path": "0"
    },
    "640": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "642": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "643": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "DUP1",
      "path": "0"
    },
    "644": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "646": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "ADD",
      "path": "0"
    },
    "647": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "649": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "650": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "DUP1",
      "path": "0"
    },
    "651": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "653": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "654": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "655": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "657": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "ADD",
      "path": "0"
    },
    "658": {
      "op": "PUSH9",
      "value": "0x155B9919599A5B9959"
    },
    "668": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "670": {
      "op": "SHL"
    },
    "671": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "672": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "673": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "POP",
      "path": "0"
    },
    "674": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78E"
    },
    "677": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        1263,
        1301
      ],
      "op": "JUMP",
      "path": "0"
    },
    "678": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1263,
        1301
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "679": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1249,
        1301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "680": {
      "op": "POP"
    },
    "681": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1325,
        1329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "683": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1315,
        1329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "684": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1315,
        1329
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "685": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1315,
        1329
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "686": {
      "branch": 17,
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1315,
        1329
      ],
      "op": "EQ",
      "path": "0"
    },
    "687": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1311,
        1583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x39D"
    },
    "690": {
      "branch": 17,
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1311,
        1583
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "691": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "693": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "694": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "695": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "697": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "698": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "699": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "700": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "701": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP7",
      "path": "0"
    },
    "702": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "703": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "704": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "706": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "707": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "708": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "709": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP8",
      "path": "0"
    },
    "710": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "711": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "712": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "713": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP4",
      "path": "0"
    },
    "714": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "715": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP6",
      "path": "0"
    },
    "716": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "717": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "718": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1400,
        1410
      ],
      "op": "CALLER",
      "path": "0"
    },
    "719": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "721": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "DUP4",
      "path": "0"
    },
    "722": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "723": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1365,
        1411
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "724": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1351,
        1361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "726": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1351,
        1361
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "729": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "730": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "DUP2",
      "path": "0"
    },
    "731": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "732": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "734": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "736": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "737": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "738": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "739": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "740": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "741": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "DUP2",
      "path": "0"
    },
    "742": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "743": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "DUP2",
      "path": "0"
    },
    "744": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "745": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "748": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1362
      ],
      "op": "DUP3",
      "path": "0"
    },
    "750": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE61"
    },
    "753": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        1344,
        1411
      ],
      "op": "JUMP",
      "path": "0"
    },
    "754": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "755": {
      "op": "POP"
    },
    "756": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "758": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "759": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "760": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "761": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "763": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "764": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "765": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "766": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x307"
    },
    "769": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "770": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "771": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE61"
    },
    "774": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        1344,
        1411
      ],
      "op": "JUMP",
      "path": "0"
    },
    "775": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "779": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "780": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "781": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "782": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "784": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "785": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "786": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "787": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C"
    },
    "790": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "791": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "792": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE61"
    },
    "795": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        1344,
        1411
      ],
      "op": "JUMP",
      "path": "0"
    },
    "796": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "797": {
      "op": "POP"
    },
    "798": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "800": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "801": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "802": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "803": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "804": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "805": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "807": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "808": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "809": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "ADD",
      "path": "0"
    },
    "810": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "811": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "op": "SUB"
    },
    "820": {
      "op": "NOT"
    },
    "821": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "AND",
      "path": "0"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "SUB"
    },
    "830": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "831": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "832": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "AND",
      "path": "0"
    },
    "833": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "834": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "835": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "836": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "OR",
      "path": "0"
    },
    "837": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "838": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1344,
        1411
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "839": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1435
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x4"
    },
    "841": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "DUP1",
      "path": "0"
    },
    "842": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "843": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "846": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x356"
    },
    "849": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "DUP4",
      "path": "0"
    },
    "850": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF21"
    },
    "853": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        1425,
        1437
      ],
      "op": "JUMP",
      "path": "0"
    },
    "854": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "855": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "856": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "857": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "POP",
      "path": "0"
    },
    "858": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "859": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1425,
        1437
      ],
      "op": "POP",
      "path": "0"
    },
    "860": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 4,
      "value": "0x2A57895AABD94CBC9FD7D516FABEB441A142EC4F6D4AABF649A43E2A7B12D586"
    },
    "893": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1476,
        1481
      ],
      "op": "DUP6",
      "path": "0"
    },
    "894": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1483,
        1489
      ],
      "op": "DUP6",
      "path": "0"
    },
    "895": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1491,
        1500
      ],
      "op": "DUP5",
      "path": "0"
    },
    "896": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1502,
        1512
      ],
      "op": "CALLER",
      "path": "0"
    },
    "897": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "899": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "900": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x390"
    },
    "903": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "904": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "905": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "906": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "907": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "908": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC42"
    },
    "911": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        1456,
        1513
      ],
      "op": "JUMP",
      "path": "0"
    },
    "912": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "913": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "915": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "916": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "917": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "918": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "SUB",
      "path": "0"
    },
    "919": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "920": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1456,
        1513
      ],
      "op": "LOG1",
      "path": "0"
    },
    "921": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1311,
        1583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DE"
    },
    "924": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1311,
        1583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "925": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1311,
        1583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "926": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x40"
    },
    "928": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "929": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "933": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "935": {
      "op": "SHL"
    },
    "936": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "DUP2",
      "path": "0"
    },
    "937": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "940": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "942": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "DUP3",
      "path": "0"
    },
    "943": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "ADD",
      "path": "0"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "947": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "949": {
      "op": "DUP3"
    },
    "950": {
      "op": "ADD"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH18",
      "value": "0x2CB7BA903732B2B2102A379029B4B3B724B7"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "976": {
      "op": "DUP3"
    },
    "977": {
      "op": "ADD"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "981": {
      "op": "ADD"
    },
    "982": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "984": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "985": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "DUP1",
      "path": "0"
    },
    "986": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "987": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "SUB",
      "path": "0"
    },
    "988": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "989": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1544,
        1572
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "990": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1311,
        1583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "991": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1061,
        1590
      ],
      "op": "POP",
      "path": "0"
    },
    "992": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1061,
        1590
      ],
      "op": "POP",
      "path": "0"
    },
    "993": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        1061,
        1590
      ],
      "op": "POP",
      "path": "0"
    },
    "994": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "POP",
      "path": "0"
    },
    "995": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        987,
        1590
      ],
      "op": "POP",
      "path": "0"
    },
    "996": {
      "fn": "Quote.setQuoteLatest",
      "jump": "o",
      "offset": [
        987,
        1590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "997": {
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "998": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1000": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1002": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1003": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1005": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1006": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1007": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1008": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1010": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1011": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1012": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1013": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1014": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1015": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1016": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x400"
    },
    "1019": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1020": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "1023": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1024": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1025": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1026": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1028": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1029": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1031": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1032": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1033": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DIV",
      "path": "0"
    },
    "1034": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MUL",
      "path": "0"
    },
    "1035": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1037": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1038": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1040": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1041": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1042": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1043": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1044": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1046": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1047": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1048": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1049": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1050": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1051": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1052": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1053": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1054": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1056": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1057": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1058": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1059": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1060": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42C"
    },
    "1063": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1064": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "1067": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1068": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1069": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1070": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1071": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x479"
    },
    "1074": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1075": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1076": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1078": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "LT",
      "path": "0"
    },
    "1079": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44E"
    },
    "1082": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1083": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1086": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1087": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1088": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1089": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DIV",
      "path": "0"
    },
    "1090": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MUL",
      "path": "0"
    },
    "1091": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1092": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1093": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1094": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1096": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1097": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1098": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x479"
    },
    "1101": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1102": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1103": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1104": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1105": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1106": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1107": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1109": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1110": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1112": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1114": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1115": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1116": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1117": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1118": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1119": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1120": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1121": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1122": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1124": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1125": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1126": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1128": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1129": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1130": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1131": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "GT",
      "path": "0"
    },
    "1132": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45C"
    },
    "1135": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1136": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1137": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1138": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SUB",
      "path": "0"
    },
    "1139": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1141": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "AND",
      "path": "0"
    },
    "1142": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1143": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1144": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1145": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1146": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1147": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1148": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1149": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1150": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1151": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1152": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1153": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1155": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1156": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1157": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1158": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48E"
    },
    "1161": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1162": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "1165": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1166": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1167": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1168": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1170": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1171": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1173": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1174": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1175": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DIV",
      "path": "0"
    },
    "1176": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MUL",
      "path": "0"
    },
    "1177": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1179": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1180": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1182": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1183": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1184": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1185": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1186": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1188": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1189": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1190": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1191": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1192": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1193": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1194": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1195": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1196": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1198": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1199": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1200": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1201": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1202": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BA"
    },
    "1205": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1206": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "1209": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1210": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1211": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1212": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1213": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "1216": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1217": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1218": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1220": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "LT",
      "path": "0"
    },
    "1221": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DC"
    },
    "1224": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1225": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1228": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1229": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1230": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1231": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DIV",
      "path": "0"
    },
    "1232": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MUL",
      "path": "0"
    },
    "1233": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1234": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1235": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1236": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1238": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1239": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1240": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x507"
    },
    "1243": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1244": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1245": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1246": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1247": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1248": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1249": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1251": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1252": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1254": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1256": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1257": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1258": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1259": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1260": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1261": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1262": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1263": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1264": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1266": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1267": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1268": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1270": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1271": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1272": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1273": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "GT",
      "path": "0"
    },
    "1274": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EA"
    },
    "1277": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1278": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1279": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1280": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SUB",
      "path": "0"
    },
    "1281": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1283": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "AND",
      "path": "0"
    },
    "1284": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1285": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1286": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1287": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1288": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1289": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1290": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1291": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1292": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "POP",
      "path": "0"
    },
    "1293": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1294": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1295": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1297": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1298": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1299": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1300": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51C"
    },
    "1303": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1304": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "1307": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1308": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1309": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1310": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1312": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1313": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1315": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1316": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1317": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DIV",
      "path": "0"
    },
    "1318": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MUL",
      "path": "0"
    },
    "1319": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1321": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1322": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1324": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1325": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1326": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1327": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1328": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1330": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1331": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1332": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1333": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1334": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1335": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1336": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1337": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1338": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1340": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1341": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1342": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1343": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1344": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x548"
    },
    "1347": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1348": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "1351": {
      "fn": "Quote.setQuoteLatest",
      "jump": "i",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1352": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1353": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1354": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1355": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x595"
    },
    "1358": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1359": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1360": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1362": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "LT",
      "path": "0"
    },
    "1363": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56A"
    },
    "1366": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1367": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1370": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1371": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1372": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1373": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DIV",
      "path": "0"
    },
    "1374": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MUL",
      "path": "0"
    },
    "1375": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1376": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1377": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1378": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1380": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1381": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1382": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x595"
    },
    "1385": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1386": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1387": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1388": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1389": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1390": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1391": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1393": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1394": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1396": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1398": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1399": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1400": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1401": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1402": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1403": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1404": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1405": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1406": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1408": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1409": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1410": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1412": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1413": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1414": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1415": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "GT",
      "path": "0"
    },
    "1416": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x578"
    },
    "1419": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1420": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1421": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1422": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SUB",
      "path": "0"
    },
    "1423": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1425": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "AND",
      "path": "0"
    },
    "1426": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1427": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1428": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1429": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1430": {
      "op": "POP"
    },
    "1431": {
      "op": "POP"
    },
    "1432": {
      "op": "POP"
    },
    "1433": {
      "offset": [
        874,
        917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1435": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1436": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1437": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "ADD",
      "path": "0"
    },
    "1438": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1439": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1440": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "op": "POP"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1449": {
      "op": "SHL"
    },
    "1450": {
      "op": "SUB"
    },
    "1451": {
      "offset": [
        874,
        917
      ],
      "op": "AND",
      "path": "0"
    },
    "1452": {
      "fn": "Quote.setQuoteLatest",
      "offset": [
        874,
        917
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1453": {
      "fn": "Quote.setQuoteLatest",
      "jump": "o",
      "offset": [
        874,
        917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1454": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1455": {
      "fn": "Quote.exists1",
      "offset": [
        2376,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1457": {
      "fn": "Quote.exists1",
      "offset": [
        2408,
        2414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1459": {
      "fn": "Quote.exists1",
      "offset": [
        2403,
        2558
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1460": {
      "fn": "Quote.exists1",
      "offset": [
        2424,
        2433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1462": {
      "fn": "Quote.exists1",
      "offset": [
        2424,
        2433
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1463": {
      "fn": "Quote.exists1",
      "offset": [
        2420,
        2421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1464": {
      "fn": "Quote.exists1",
      "offset": [
        2420,
        2433
      ],
      "op": "LT",
      "path": "0"
    },
    "1465": {
      "fn": "Quote.exists1",
      "offset": [
        2403,
        2558
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1466": {
      "fn": "Quote.exists1",
      "offset": [
        2403,
        2558
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x693"
    },
    "1469": {
      "fn": "Quote.exists1",
      "offset": [
        2403,
        2558
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1470": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1472": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1473": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1474": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1475": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2463
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1477": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1479": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1480": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1481": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1482": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1484": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1485": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1486": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2466
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1487": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2480
      ],
      "op": "ADD",
      "path": "0"
    },
    "1488": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2480
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "op": "SUB"
    },
    "1497": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2487
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1498": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2487
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1499": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2487
      ],
      "op": "AND",
      "path": "0"
    },
    "1500": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2480
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1501": {
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2480
      ],
      "op": "AND",
      "path": "0"
    },
    "1502": {
      "branch": 18,
      "fn": "Quote.exists1",
      "offset": [
        2458,
        2487
      ],
      "op": "SUB",
      "path": "0"
    },
    "1503": {
      "fn": "Quote.exists1",
      "offset": [
        2454,
        2548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x681"
    },
    "1506": {
      "branch": 18,
      "fn": "Quote.exists1",
      "offset": [
        2454,
        2548
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1507": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x0"
    },
    "1509": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1510": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1511": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2523
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1512": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1514": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1516": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2523
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1517": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1519": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2523
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1520": {
      "fn": "Quote.exists1",
      "offset": [
        2515,
        2523
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1521": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1522": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1523": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FB"
    },
    "1526": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1527": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "1530": {
      "fn": "Quote.exists1",
      "jump": "i",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1531": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1532": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1533": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1535": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1536": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1538": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1539": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1540": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DIV",
      "path": "0"
    },
    "1541": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "MUL",
      "path": "0"
    },
    "1542": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1544": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1545": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1547": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1548": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1549": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1550": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1551": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1553": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1554": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1555": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1556": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1557": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1558": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1559": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1560": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1561": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1563": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1564": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1565": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1566": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1567": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x627"
    },
    "1570": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1571": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "1574": {
      "fn": "Quote.exists1",
      "jump": "i",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1575": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1576": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1577": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1578": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x674"
    },
    "1581": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1582": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1583": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1585": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "LT",
      "path": "0"
    },
    "1586": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x649"
    },
    "1589": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1590": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1593": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1594": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1595": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1596": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DIV",
      "path": "0"
    },
    "1597": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "MUL",
      "path": "0"
    },
    "1598": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1599": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1600": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1601": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1603": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1604": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1605": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x674"
    },
    "1608": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1609": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1610": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1611": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1612": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1613": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1614": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1616": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1617": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1619": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1621": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1622": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1623": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1624": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1625": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1626": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1627": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1628": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1629": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1631": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1632": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1633": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1635": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1636": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1637": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1638": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "GT",
      "path": "0"
    },
    "1639": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x657"
    },
    "1642": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1643": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1644": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1645": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SUB",
      "path": "0"
    },
    "1646": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1648": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "AND",
      "path": "0"
    },
    "1649": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1650": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "ADD",
      "path": "0"
    },
    "1651": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1652": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1653": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "POP",
      "path": "0"
    },
    "1654": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "POP",
      "path": "0"
    },
    "1655": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "POP",
      "path": "0"
    },
    "1656": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "POP",
      "path": "0"
    },
    "1657": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "POP",
      "path": "0"
    },
    "1658": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1659": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "POP",
      "path": "0"
    },
    "1660": {
      "fn": "Quote.exists1",
      "offset": [
        2507,
        2533
      ],
      "op": "POP",
      "path": "0"
    },
    "1661": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1662": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1663": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "POP",
      "path": "0"
    },
    "1664": {
      "fn": "Quote.exists1",
      "jump": "o",
      "offset": [
        2325,
        2593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1665": {
      "fn": "Quote.exists1",
      "offset": [
        2454,
        2548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1666": {
      "fn": "Quote.exists1",
      "offset": [
        2435,
        2438
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 7
    },
    "1667": {
      "fn": "Quote.exists1",
      "offset": [
        2435,
        2438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68B"
    },
    "1670": {
      "fn": "Quote.exists1",
      "offset": [
        2435,
        2438
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1671": {
      "fn": "Quote.exists1",
      "offset": [
        2435,
        2438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF21"
    },
    "1674": {
      "fn": "Quote.exists1",
      "jump": "i",
      "offset": [
        2435,
        2438
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1675": {
      "fn": "Quote.exists1",
      "offset": [
        2435,
        2438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1676": {
      "fn": "Quote.exists1",
      "offset": [
        2435,
        2438
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1677": {
      "fn": "Quote.exists1",
      "offset": [
        2435,
        2438
      ],
      "op": "POP",
      "path": "0"
    },
    "1678": {
      "fn": "Quote.exists1",
      "offset": [
        2435,
        2438
      ],
      "op": "POP",
      "path": "0"
    },
    "1679": {
      "fn": "Quote.exists1",
      "offset": [
        2403,
        2558
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B3"
    },
    "1682": {
      "fn": "Quote.exists1",
      "offset": [
        2403,
        2558
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1683": {
      "fn": "Quote.exists1",
      "offset": [
        2403,
        2558
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1684": {
      "op": "POP"
    },
    "1685": {
      "op": "POP"
    },
    "1686": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x40"
    },
    "1688": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1689": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1690": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1691": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1692": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "ADD",
      "path": "0"
    },
    "1693": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1694": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1695": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1696": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1698": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1699": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1700": {
      "op": "PUSH9",
      "value": "0x155B9919599A5B9959"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1712": {
      "op": "SHL"
    },
    "1713": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1715": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1716": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "ADD",
      "path": "0"
    },
    "1717": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1718": {
      "fn": "Quote.exists1",
      "offset": [
        2568,
        2586
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1719": {
      "fn": "Quote.exists1",
      "offset": [
        2325,
        2593
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1720": {
      "op": "POP"
    },
    "1721": {
      "fn": "Quote.exists1",
      "jump": "o",
      "offset": [
        2325,
        2593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1722": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1723": {
      "fn": "Quote.addNewUser",
      "offset": [
        1979,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1725": {
      "fn": "Quote.addNewUser",
      "offset": [
        2002,
        2025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C5"
    },
    "1728": {
      "fn": "Quote.addNewUser",
      "offset": [
        2010,
        2024
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1729": {
      "fn": "Quote.addNewUser",
      "offset": [
        2002,
        2009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AE"
    },
    "1732": {
      "fn": "Quote.addNewUser",
      "jump": "i",
      "offset": [
        2002,
        2025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1733": {
      "fn": "Quote.addNewUser",
      "offset": [
        2002,
        2025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1734": {
      "fn": "Quote.addNewUser",
      "offset": [
        1979,
        2025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1735": {
      "fn": "Quote.addNewUser",
      "offset": [
        1979,
        2025
      ],
      "op": "POP",
      "path": "0"
    },
    "1736": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F2"
    },
    "1739": {
      "fn": "Quote.addNewUser",
      "offset": [
        2064,
        2070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1740": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1742": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1743": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1744": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1746": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "ADD",
      "path": "0"
    },
    "1747": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1749": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1750": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1751": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1753": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1754": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1755": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1757": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "ADD",
      "path": "0"
    },
    "1758": {
      "op": "PUSH9",
      "value": "0x155B9919599A5B9959"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1772": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1773": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "POP",
      "path": "0"
    },
    "1774": {
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2063
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78E"
    },
    "1777": {
      "fn": "Quote.addNewUser",
      "jump": "i",
      "offset": [
        2049,
        2084
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1778": {
      "branch": 19,
      "fn": "Quote.addNewUser",
      "offset": [
        2049,
        2084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1779": {
      "fn": "Quote.addNewUser",
      "offset": [
        2045,
        2311
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1780": {
      "fn": "Quote.addNewUser",
      "offset": [
        2045,
        2311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x789"
    },
    "1783": {
      "branch": 19,
      "fn": "Quote.addNewUser",
      "offset": [
        2045,
        2311
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1786": {
      "op": "DUP1"
    },
    "1787": {
      "op": "MLOAD"
    },
    "1788": {
      "op": "DUP1"
    },
    "1789": {
      "op": "DUP3"
    },
    "1790": {
      "op": "ADD"
    },
    "1791": {
      "op": "DUP3"
    },
    "1792": {
      "op": "MSTORE"
    },
    "1793": {
      "fn": "Quote.addNewUser",
      "offset": [
        2133,
        2158
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 9
    },
    "1794": {
      "fn": "Quote.addNewUser",
      "offset": [
        2133,
        2158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1795": {
      "fn": "Quote.addNewUser",
      "offset": [
        2133,
        2158
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1802": {
      "op": "SHL"
    },
    "1803": {
      "op": "SUB"
    },
    "1804": {
      "fn": "Quote.addNewUser",
      "offset": [
        2172,
        2207
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 10
    },
    "1805": {
      "fn": "Quote.addNewUser",
      "offset": [
        2172,
        2207
      ],
      "op": "AND",
      "path": "0"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1808": {
      "op": "DUP1"
    },
    "1809": {
      "op": "DUP4"
    },
    "1810": {
      "op": "ADD"
    },
    "1811": {
      "fn": "Quote.addNewUser",
      "offset": [
        2172,
        2207
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1812": {
      "fn": "Quote.addNewUser",
      "offset": [
        2172,
        2207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1813": {
      "fn": "Quote.addNewUser",
      "offset": [
        2172,
        2207
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1814": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 11
    },
    "1815": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1816": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1817": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1818": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "ADD",
      "path": "0"
    },
    "1819": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1820": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1821": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1822": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1823": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1824": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1825": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1826": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "ADD",
      "path": "0"
    },
    "1827": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1828": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1829": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1830": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1831": {
      "fn": "Quote.addNewUser",
      "offset": [
        2228,
        2237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1833": {
      "fn": "Quote.addNewUser",
      "offset": [
        2228,
        2237
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1836": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1837": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1838": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1839": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1841": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1842": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1843": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1844": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1845": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1846": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1847": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1848": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1849": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1850": {
      "op": "SWAP2"
    },
    "1851": {
      "op": "SWAP3"
    },
    "1852": {
      "fn": "Quote.addNewUser",
      "offset": [
        2241,
        2275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1853": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1854": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1855": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x748"
    },
    "1858": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1859": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2238
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1860": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE61"
    },
    "1863": {
      "fn": "Quote.addNewUser",
      "jump": "i",
      "offset": [
        2222,
        2275
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1864": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1865": {
      "op": "POP"
    },
    "1866": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1868": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1869": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1870": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1871": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "ADD",
      "path": "0"
    },
    "1872": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1873": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1875": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1876": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1877": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "ADD",
      "path": "0"
    },
    "1878": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1879": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1886": {
      "op": "SHL"
    },
    "1887": {
      "op": "SUB"
    },
    "1888": {
      "op": "NOT"
    },
    "1889": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "AND",
      "path": "0"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1896": {
      "op": "SHL"
    },
    "1897": {
      "op": "SUB"
    },
    "1898": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1899": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1900": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "AND",
      "path": "0"
    },
    "1901": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1902": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1903": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1904": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "OR",
      "path": "0"
    },
    "1905": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1906": {
      "fn": "Quote.addNewUser",
      "offset": [
        2222,
        2275
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1907": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2298
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x3"
    },
    "1909": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1910": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1911": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1914": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x782"
    },
    "1917": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1918": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF21"
    },
    "1921": {
      "fn": "Quote.addNewUser",
      "jump": "i",
      "offset": [
        2289,
        2300
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1922": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1923": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1924": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1925": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "POP",
      "path": "0"
    },
    "1926": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1927": {
      "fn": "Quote.addNewUser",
      "offset": [
        2289,
        2300
      ],
      "op": "POP",
      "path": "0"
    },
    "1928": {
      "fn": "Quote.addNewUser",
      "offset": [
        2086,
        2311
      ],
      "op": "POP",
      "path": "0"
    },
    "1929": {
      "fn": "Quote.addNewUser",
      "offset": [
        2045,
        2311
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1930": {
      "fn": "Quote.addNewUser",
      "offset": [
        1969,
        2317
      ],
      "op": "POP",
      "path": "0"
    },
    "1931": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "POP",
      "path": "0"
    },
    "1932": {
      "fn": "Quote.addNewUser",
      "offset": [
        1893,
        2317
      ],
      "op": "POP",
      "path": "0"
    },
    "1933": {
      "fn": "Quote.addNewUser",
      "jump": "o",
      "offset": [
        1893,
        2317
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1934": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1935": {
      "fn": "Quote.compareStrings",
      "offset": [
        511,
        515
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1937": {
      "fn": "Quote.compareStrings",
      "offset": [
        595,
        596
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 13
    },
    "1938": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1940": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1941": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1943": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "ADD",
      "path": "0"
    },
    "1944": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A1"
    },
    "1947": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1948": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1949": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF48"
    },
    "1952": {
      "fn": "Quote.compareStrings",
      "jump": "i",
      "offset": [
        577,
        598
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1953": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1954": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1956": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1957": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1959": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1960": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1961": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "SUB",
      "path": "0"
    },
    "1962": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "SUB",
      "path": "0"
    },
    "1963": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1964": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1965": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1966": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1968": {
      "fn": "Quote.compareStrings",
      "offset": [
        577,
        598
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1969": {
      "fn": "Quote.compareStrings",
      "offset": [
        567,
        599
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1970": {
      "fn": "Quote.compareStrings",
      "offset": [
        567,
        599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1971": {
      "fn": "Quote.compareStrings",
      "offset": [
        567,
        599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1972": {
      "fn": "Quote.compareStrings",
      "offset": [
        567,
        599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1974": {
      "fn": "Quote.compareStrings",
      "offset": [
        567,
        599
      ],
      "op": "ADD",
      "path": "0"
    },
    "1975": {
      "fn": "Quote.compareStrings",
      "offset": [
        567,
        599
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1976": {
      "fn": "Quote.compareStrings",
      "offset": [
        559,
        560
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1977": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1979": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1980": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1982": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "ADD",
      "path": "0"
    },
    "1983": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C8"
    },
    "1986": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1987": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1988": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF48"
    },
    "1991": {
      "fn": "Quote.compareStrings",
      "jump": "i",
      "offset": [
        541,
        562
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1992": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1993": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1995": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1996": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1998": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1999": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2000": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "SUB",
      "path": "0"
    },
    "2001": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "SUB",
      "path": "0"
    },
    "2002": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2003": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2004": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2005": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2007": {
      "fn": "Quote.compareStrings",
      "offset": [
        541,
        562
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2008": {
      "fn": "Quote.compareStrings",
      "offset": [
        531,
        563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2009": {
      "fn": "Quote.compareStrings",
      "offset": [
        531,
        563
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2010": {
      "fn": "Quote.compareStrings",
      "offset": [
        531,
        563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2011": {
      "fn": "Quote.compareStrings",
      "offset": [
        531,
        563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2013": {
      "fn": "Quote.compareStrings",
      "offset": [
        531,
        563
      ],
      "op": "ADD",
      "path": "0"
    },
    "2014": {
      "fn": "Quote.compareStrings",
      "offset": [
        531,
        563
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2015": {
      "fn": "Quote.compareStrings",
      "offset": [
        531,
        599
      ],
      "op": "EQ",
      "path": "0"
    },
    "2016": {
      "fn": "Quote.compareStrings",
      "offset": [
        523,
        600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2017": {
      "fn": "Quote.compareStrings",
      "offset": [
        523,
        600
      ],
      "op": "POP",
      "path": "0"
    },
    "2018": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2019": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2020": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "POP",
      "path": "0"
    },
    "2021": {
      "fn": "Quote.compareStrings",
      "offset": [
        431,
        607
      ],
      "op": "POP",
      "path": "0"
    },
    "2022": {
      "fn": "Quote.compareStrings",
      "jump": "o",
      "offset": [
        431,
        607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2023": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2024": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1642,
        1659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2026": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1670,
        1690
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2028": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1708,
        1718
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2030": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1708,
        1718
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2031": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2040": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2041": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "GT",
      "path": "0"
    },
    "2042": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2043": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x806"
    },
    "2046": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2047": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x806"
    },
    "2050": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3B"
    },
    "2053": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2054": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2055": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2057": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2058": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2059": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2060": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2061": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2062": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2063": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2065": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "MUL",
      "path": "0"
    },
    "2066": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2068": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "ADD",
      "path": "0"
    },
    "2069": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2070": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "ADD",
      "path": "0"
    },
    "2071": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2073": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2074": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2075": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2076": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86B"
    },
    "2079": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2080": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2081": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2083": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "ADD",
      "path": "0"
    },
    "2084": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2085": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x858"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2090": {
      "op": "MLOAD"
    },
    "2091": {
      "op": "DUP1"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2097": {
      "op": "MSTORE"
    },
    "2098": {
      "op": "DUP1"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2101": {
      "op": "DUP2"
    },
    "2102": {
      "op": "MSTORE"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2105": {
      "op": "ADD"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2108": {
      "op": "DUP2"
    },
    "2109": {
      "op": "MSTORE"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2112": {
      "op": "ADD"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2115": {
      "op": "DUP2"
    },
    "2116": {
      "op": "MSTORE"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2119": {
      "op": "ADD"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2128": {
      "op": "SHL"
    },
    "2129": {
      "op": "SUB"
    },
    "2130": {
      "op": "AND"
    },
    "2131": {
      "op": "DUP2"
    },
    "2132": {
      "op": "MSTORE"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "op": "SWAP1"
    },
    "2135": {
      "op": "JUMP"
    },
    "2136": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2137": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2138": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2139": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2141": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "ADD",
      "path": "0"
    },
    "2142": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2143": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2145": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2146": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "SUB",
      "path": "0"
    },
    "2147": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2148": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2149": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x824"
    },
    "2152": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2153": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2154": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "POP",
      "path": "0"
    },
    "2155": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2156": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1693,
        1719
      ],
      "op": "POP",
      "path": "0"
    },
    "2157": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1670,
        1719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2158": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1670,
        1719
      ],
      "op": "POP",
      "path": "0"
    },
    "2159": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1734,
        1740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2161": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1729,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2162": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1750,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2164": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1750,
        1760
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2165": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1746,
        1747
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2166": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1746,
        1760
      ],
      "op": "LT",
      "path": "0"
    },
    "2167": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1729,
        1855
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2168": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1729,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA96"
    },
    "2171": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1729,
        1855
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2172": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1781,
        1804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2174": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2175": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2176": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2177": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2179": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2181": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2182": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2184": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2185": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2186": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2187": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2188": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "2189": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2190": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2192": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2193": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2194": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2195": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2196": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2197": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2198": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2199": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2200": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2201": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2202": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2203": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2204": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2205": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2206": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2207": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1807,
        1816
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2208": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A8"
    },
    "2211": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2212": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "2215": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2216": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2217": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2218": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2220": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2221": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2223": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2224": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2225": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DIV",
      "path": "0"
    },
    "2226": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MUL",
      "path": "0"
    },
    "2227": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2229": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2230": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2232": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2233": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2234": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2235": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2236": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2238": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2239": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2240": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2241": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2242": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2243": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2244": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2245": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2246": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2248": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2249": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2250": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2251": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2252": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D4"
    },
    "2255": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2256": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "2259": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2260": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2261": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2262": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2263": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x921"
    },
    "2266": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2267": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2268": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2270": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "LT",
      "path": "0"
    },
    "2271": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F6"
    },
    "2274": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2275": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2278": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2279": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2280": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2281": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DIV",
      "path": "0"
    },
    "2282": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MUL",
      "path": "0"
    },
    "2283": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2284": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2285": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2286": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2288": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2289": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2290": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x921"
    },
    "2293": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2294": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2295": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2296": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2297": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2298": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2299": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2301": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2302": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2304": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2306": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2307": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2308": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2309": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2310": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2311": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2312": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2313": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2314": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2316": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2317": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2318": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2320": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2321": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2322": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2323": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "GT",
      "path": "0"
    },
    "2324": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x904"
    },
    "2327": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2328": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2329": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2330": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SUB",
      "path": "0"
    },
    "2331": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2333": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "AND",
      "path": "0"
    },
    "2334": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2335": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2336": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2337": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2338": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2339": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2340": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2341": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2342": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2343": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2344": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2345": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2347": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2348": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2350": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2351": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2352": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2353": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2354": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93A"
    },
    "2357": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2358": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "2361": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2362": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2363": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2364": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2366": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2367": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2369": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2370": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2371": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DIV",
      "path": "0"
    },
    "2372": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MUL",
      "path": "0"
    },
    "2373": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2375": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2376": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2378": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2379": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2380": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2381": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2382": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2384": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2385": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2386": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2387": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2388": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2389": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2390": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2391": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2392": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2394": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2395": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2396": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2397": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2398": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x966"
    },
    "2401": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2402": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "2405": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2406": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2407": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2408": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2409": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "2412": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2413": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2414": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2416": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "LT",
      "path": "0"
    },
    "2417": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x988"
    },
    "2420": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2421": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2424": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2425": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2426": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2427": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DIV",
      "path": "0"
    },
    "2428": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MUL",
      "path": "0"
    },
    "2429": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2430": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2431": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2432": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2434": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2435": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2436": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "2439": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2440": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2441": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2442": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2443": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2444": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2445": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2447": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2448": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2450": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2452": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2453": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2454": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2455": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2456": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2457": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2458": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2459": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2460": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2462": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2463": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2464": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2466": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2467": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2468": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2469": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "GT",
      "path": "0"
    },
    "2470": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x996"
    },
    "2473": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2474": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2475": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2476": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SUB",
      "path": "0"
    },
    "2477": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2479": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "AND",
      "path": "0"
    },
    "2480": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2481": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2482": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2483": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2484": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2485": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2486": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2487": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2488": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2489": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2490": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2491": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2493": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2494": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2496": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2497": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2498": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2499": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2500": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CC"
    },
    "2503": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2504": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "2507": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2508": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2509": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2510": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2512": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2513": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2515": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2516": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2517": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DIV",
      "path": "0"
    },
    "2518": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MUL",
      "path": "0"
    },
    "2519": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2521": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2522": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2524": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2525": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2526": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2527": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2528": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2530": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2531": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2532": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2533": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2534": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2535": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2536": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2537": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2538": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2540": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2541": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2542": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2543": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2544": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F8"
    },
    "2547": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2548": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "2551": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2552": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2553": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2554": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2555": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA45"
    },
    "2558": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2559": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2560": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2562": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "LT",
      "path": "0"
    },
    "2563": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1A"
    },
    "2566": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2567": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2570": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2571": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2572": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2573": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DIV",
      "path": "0"
    },
    "2574": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MUL",
      "path": "0"
    },
    "2575": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2576": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2577": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2578": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2580": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2581": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2582": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA45"
    },
    "2585": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2586": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2587": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2588": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2589": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2590": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2591": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2593": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2594": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2596": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2598": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2599": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2600": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2601": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2602": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2603": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2604": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2605": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2606": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2608": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2609": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2610": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2612": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2613": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2614": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2615": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "GT",
      "path": "0"
    },
    "2616": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA28"
    },
    "2619": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2620": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2621": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2622": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SUB",
      "path": "0"
    },
    "2623": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2625": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "AND",
      "path": "0"
    },
    "2626": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2627": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2628": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2629": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "op": "POP"
    },
    "2632": {
      "op": "POP"
    },
    "2633": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2634": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2635": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2636": {
      "op": "POP"
    },
    "2637": {
      "op": "POP"
    },
    "2638": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2640": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2641": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2642": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2643": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2644": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2651": {
      "op": "SHL"
    },
    "2652": {
      "op": "SUB"
    },
    "2653": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "AND",
      "path": "0"
    },
    "2654": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2656": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2657": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2658": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "ADD",
      "path": "0"
    },
    "2659": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2660": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2661": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2662": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1832
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2663": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1832
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2664": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1833,
        1834
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2665": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1833,
        1834
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2666": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2667": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "LT",
      "path": "0"
    },
    "2668": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA77"
    },
    "2671": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2672": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA77"
    },
    "2675": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF64"
    },
    "2678": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1830,
        1835
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2679": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2680": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2682": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "MUL",
      "path": "0"
    },
    "2683": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2685": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "ADD",
      "path": "0"
    },
    "2686": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1835
      ],
      "op": "ADD",
      "path": "0"
    },
    "2687": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2688": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2689": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2690": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1830,
        1844
      ],
      "op": "POP",
      "path": "0"
    },
    "2691": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1767,
        1855
      ],
      "op": "POP",
      "path": "0"
    },
    "2692": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1762,
        1765
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 15
    },
    "2693": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1762,
        1765
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2694": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1762,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8E"
    },
    "2697": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1762,
        1765
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2698": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1762,
        1765
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF21"
    },
    "2701": {
      "fn": "Quote.getQuoteByUser",
      "jump": "i",
      "offset": [
        1762,
        1765
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2702": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1762,
        1765
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2703": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1762,
        1765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2704": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1762,
        1765
      ],
      "op": "POP",
      "path": "0"
    },
    "2705": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1762,
        1765
      ],
      "op": "POP",
      "path": "0"
    },
    "2706": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1729,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x871"
    },
    "2709": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1729,
        1855
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2710": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1729,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2711": {
      "op": "POP"
    },
    "2712": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1871,
        1873
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 16
    },
    "2713": {
      "fn": "Quote.getQuoteByUser",
      "offset": [
        1596,
        1880
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2714": {
      "op": "POP"
    },
    "2715": {
      "fn": "Quote.getQuoteByUser",
      "jump": "o",
      "offset": [
        1596,
        1880
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2716": {
      "op": "JUMPDEST"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2721": {
      "op": "DUP3"
    },
    "2722": {
      "op": "DUP5"
    },
    "2723": {
      "op": "SUB"
    },
    "2724": {
      "op": "SLT"
    },
    "2725": {
      "op": "ISZERO"
    },
    "2726": {
      "op": "PUSH2",
      "value": "0xAAE"
    },
    "2729": {
      "op": "JUMPI"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2732": {
      "op": "DUP1"
    },
    "2733": {
      "op": "REVERT"
    },
    "2734": {
      "op": "JUMPDEST"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "op": "CALLDATALOAD"
    },
    "2737": {
      "op": "SWAP2"
    },
    "2738": {
      "op": "SWAP1"
    },
    "2739": {
      "op": "POP"
    },
    "2740": {
      "jump": "o",
      "op": "JUMP"
    },
    "2741": {
      "op": "JUMPDEST"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2744": {
      "op": "JUMPDEST"
    },
    "2745": {
      "op": "DUP4"
    },
    "2746": {
      "op": "DUP2"
    },
    "2747": {
      "op": "LT"
    },
    "2748": {
      "op": "ISZERO"
    },
    "2749": {
      "op": "PUSH2",
      "value": "0xAD0"
    },
    "2752": {
      "op": "JUMPI"
    },
    "2753": {
      "op": "DUP2"
    },
    "2754": {
      "op": "DUP2"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "MLOAD"
    },
    "2757": {
      "op": "DUP4"
    },
    "2758": {
      "op": "DUP3"
    },
    "2759": {
      "op": "ADD"
    },
    "2760": {
      "op": "MSTORE"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2763": {
      "op": "ADD"
    },
    "2764": {
      "op": "PUSH2",
      "value": "0xAB8"
    },
    "2767": {
      "op": "JUMP"
    },
    "2768": {
      "op": "JUMPDEST"
    },
    "2769": {
      "op": "DUP4"
    },
    "2770": {
      "op": "DUP2"
    },
    "2771": {
      "op": "GT"
    },
    "2772": {
      "op": "ISZERO"
    },
    "2773": {
      "op": "PUSH2",
      "value": "0xADF"
    },
    "2776": {
      "op": "JUMPI"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2779": {
      "op": "DUP5"
    },
    "2780": {
      "op": "DUP5"
    },
    "2781": {
      "op": "ADD"
    },
    "2782": {
      "op": "MSTORE"
    },
    "2783": {
      "op": "JUMPDEST"
    },
    "2784": {
      "op": "POP"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "op": "POP"
    },
    "2788": {
      "jump": "o",
      "op": "JUMP"
    },
    "2789": {
      "op": "JUMPDEST"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2792": {
      "op": "DUP2"
    },
    "2793": {
      "op": "MLOAD"
    },
    "2794": {
      "op": "DUP1"
    },
    "2795": {
      "op": "DUP5"
    },
    "2796": {
      "op": "MSTORE"
    },
    "2797": {
      "op": "PUSH2",
      "value": "0xAFD"
    },
    "2800": {
      "op": "DUP2"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2803": {
      "op": "DUP7"
    },
    "2804": {
      "op": "ADD"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2807": {
      "op": "DUP7"
    },
    "2808": {
      "op": "ADD"
    },
    "2809": {
      "op": "PUSH2",
      "value": "0xAB5"
    },
    "2812": {
      "jump": "i",
      "op": "JUMP"
    },
    "2813": {
      "op": "JUMPDEST"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2816": {
      "op": "ADD"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2819": {
      "op": "NOT"
    },
    "2820": {
      "op": "AND"
    },
    "2821": {
      "op": "SWAP3"
    },
    "2822": {
      "op": "SWAP1"
    },
    "2823": {
      "op": "SWAP3"
    },
    "2824": {
      "op": "ADD"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "op": "SWAP3"
    },
    "2829": {
      "op": "SWAP2"
    },
    "2830": {
      "op": "POP"
    },
    "2831": {
      "op": "POP"
    },
    "2832": {
      "jump": "o",
      "op": "JUMP"
    },
    "2833": {
      "op": "JUMPDEST"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2836": {
      "op": "DUP2"
    },
    "2837": {
      "op": "MSTORE"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2840": {
      "op": "PUSH2",
      "value": "0xB24"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2845": {
      "op": "DUP4"
    },
    "2846": {
      "op": "ADD"
    },
    "2847": {
      "op": "DUP6"
    },
    "2848": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "2851": {
      "jump": "i",
      "op": "JUMP"
    },
    "2852": {
      "op": "JUMPDEST"
    },
    "2853": {
      "op": "SWAP1"
    },
    "2854": {
      "op": "POP"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2857": {
      "op": "DUP1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "op": "SUB"
    },
    "2862": {
      "op": "DUP4"
    },
    "2863": {
      "op": "AND"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2866": {
      "op": "DUP4"
    },
    "2867": {
      "op": "ADD"
    },
    "2868": {
      "op": "MSTORE"
    },
    "2869": {
      "op": "SWAP4"
    },
    "2870": {
      "op": "SWAP3"
    },
    "2871": {
      "op": "POP"
    },
    "2872": {
      "op": "POP"
    },
    "2873": {
      "op": "POP"
    },
    "2874": {
      "jump": "o",
      "op": "JUMP"
    },
    "2875": {
      "op": "JUMPDEST"
    },
    "2876": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2883": {
      "op": "SHL"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2886": {
      "op": "MSTORE"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2891": {
      "op": "MSTORE"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2896": {
      "op": "REVERT"
    },
    "2897": {
      "op": "JUMPDEST"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2900": {
      "op": "DUP3"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2903": {
      "op": "DUP4"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "SLT"
    },
    "2906": {
      "op": "PUSH2",
      "value": "0xB62"
    },
    "2909": {
      "op": "JUMPI"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2912": {
      "op": "DUP1"
    },
    "2913": {
      "op": "REVERT"
    },
    "2914": {
      "op": "JUMPDEST"
    },
    "2915": {
      "op": "DUP2"
    },
    "2916": {
      "op": "CALLDATALOAD"
    },
    "2917": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2926": {
      "op": "DUP1"
    },
    "2927": {
      "op": "DUP3"
    },
    "2928": {
      "op": "GT"
    },
    "2929": {
      "op": "ISZERO"
    },
    "2930": {
      "op": "PUSH2",
      "value": "0xB7D"
    },
    "2933": {
      "op": "JUMPI"
    },
    "2934": {
      "op": "PUSH2",
      "value": "0xB7D"
    },
    "2937": {
      "op": "PUSH2",
      "value": "0xB3B"
    },
    "2940": {
      "jump": "i",
      "op": "JUMP"
    },
    "2941": {
      "op": "JUMPDEST"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2944": {
      "op": "MLOAD"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2947": {
      "op": "DUP4"
    },
    "2948": {
      "op": "ADD"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2951": {
      "op": "NOT"
    },
    "2952": {
      "op": "SWAP1"
    },
    "2953": {
      "op": "DUP2"
    },
    "2954": {
      "op": "AND"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2957": {
      "op": "ADD"
    },
    "2958": {
      "op": "AND"
    },
    "2959": {
      "op": "DUP2"
    },
    "2960": {
      "op": "ADD"
    },
    "2961": {
      "op": "SWAP1"
    },
    "2962": {
      "op": "DUP3"
    },
    "2963": {
      "op": "DUP3"
    },
    "2964": {
      "op": "GT"
    },
    "2965": {
      "op": "DUP2"
    },
    "2966": {
      "op": "DUP4"
    },
    "2967": {
      "op": "LT"
    },
    "2968": {
      "op": "OR"
    },
    "2969": {
      "op": "ISZERO"
    },
    "2970": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "2973": {
      "op": "JUMPI"
    },
    "2974": {
      "op": "PUSH2",
      "value": "0xBA5"
    },
    "2977": {
      "op": "PUSH2",
      "value": "0xB3B"
    },
    "2980": {
      "jump": "i",
      "op": "JUMP"
    },
    "2981": {
      "op": "JUMPDEST"
    },
    "2982": {
      "op": "DUP2"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2985": {
      "op": "MSTORE"
    },
    "2986": {
      "op": "DUP4"
    },
    "2987": {
      "op": "DUP2"
    },
    "2988": {
      "op": "MSTORE"
    },
    "2989": {
      "op": "DUP7"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2992": {
      "op": "DUP6"
    },
    "2993": {
      "op": "DUP9"
    },
    "2994": {
      "op": "ADD"
    },
    "2995": {
      "op": "ADD"
    },
    "2996": {
      "op": "GT"
    },
    "2997": {
      "op": "ISZERO"
    },
    "2998": {
      "op": "PUSH2",
      "value": "0xBBE"
    },
    "3001": {
      "op": "JUMPI"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3004": {
      "op": "DUP1"
    },
    "3005": {
      "op": "REVERT"
    },
    "3006": {
      "op": "JUMPDEST"
    },
    "3007": {
      "op": "DUP4"
    },
    "3008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3010": {
      "op": "DUP8"
    },
    "3011": {
      "op": "ADD"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3014": {
      "op": "DUP4"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "CALLDATACOPY"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3021": {
      "op": "DUP6"
    },
    "3022": {
      "op": "DUP4"
    },
    "3023": {
      "op": "ADD"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "MSTORE"
    },
    "3026": {
      "op": "DUP1"
    },
    "3027": {
      "op": "SWAP5"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "op": "POP"
    },
    "3030": {
      "op": "POP"
    },
    "3031": {
      "op": "POP"
    },
    "3032": {
      "op": "POP"
    },
    "3033": {
      "op": "SWAP3"
    },
    "3034": {
      "op": "SWAP2"
    },
    "3035": {
      "op": "POP"
    },
    "3036": {
      "op": "POP"
    },
    "3037": {
      "jump": "o",
      "op": "JUMP"
    },
    "3038": {
      "op": "JUMPDEST"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3041": {
      "op": "DUP1"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3044": {
      "op": "DUP4"
    },
    "3045": {
      "op": "DUP6"
    },
    "3046": {
      "op": "SUB"
    },
    "3047": {
      "op": "SLT"
    },
    "3048": {
      "op": "ISZERO"
    },
    "3049": {
      "op": "PUSH2",
      "value": "0xBF1"
    },
    "3052": {
      "op": "JUMPI"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3055": {
      "op": "DUP1"
    },
    "3056": {
      "op": "REVERT"
    },
    "3057": {
      "op": "JUMPDEST"
    },
    "3058": {
      "op": "DUP3"
    },
    "3059": {
      "op": "CALLDATALOAD"
    },
    "3060": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3069": {
      "op": "DUP1"
    },
    "3070": {
      "op": "DUP3"
    },
    "3071": {
      "op": "GT"
    },
    "3072": {
      "op": "ISZERO"
    },
    "3073": {
      "op": "PUSH2",
      "value": "0xC09"
    },
    "3076": {
      "op": "JUMPI"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3079": {
      "op": "DUP1"
    },
    "3080": {
      "op": "REVERT"
    },
    "3081": {
      "op": "JUMPDEST"
    },
    "3082": {
      "op": "PUSH2",
      "value": "0xC15"
    },
    "3085": {
      "op": "DUP7"
    },
    "3086": {
      "op": "DUP4"
    },
    "3087": {
      "op": "DUP8"
    },
    "3088": {
      "op": "ADD"
    },
    "3089": {
      "op": "PUSH2",
      "value": "0xB51"
    },
    "3092": {
      "jump": "i",
      "op": "JUMP"
    },
    "3093": {
      "op": "JUMPDEST"
    },
    "3094": {
      "op": "SWAP4"
    },
    "3095": {
      "op": "POP"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3098": {
      "op": "DUP6"
    },
    "3099": {
      "op": "ADD"
    },
    "3100": {
      "op": "CALLDATALOAD"
    },
    "3101": {
      "op": "SWAP2"
    },
    "3102": {
      "op": "POP"
    },
    "3103": {
      "op": "DUP1"
    },
    "3104": {
      "op": "DUP3"
    },
    "3105": {
      "op": "GT"
    },
    "3106": {
      "op": "ISZERO"
    },
    "3107": {
      "op": "PUSH2",
      "value": "0xC2B"
    },
    "3110": {
      "op": "JUMPI"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3113": {
      "op": "DUP1"
    },
    "3114": {
      "op": "REVERT"
    },
    "3115": {
      "op": "JUMPDEST"
    },
    "3116": {
      "op": "POP"
    },
    "3117": {
      "op": "PUSH2",
      "value": "0xC38"
    },
    "3120": {
      "op": "DUP6"
    },
    "3121": {
      "op": "DUP3"
    },
    "3122": {
      "op": "DUP7"
    },
    "3123": {
      "op": "ADD"
    },
    "3124": {
      "op": "PUSH2",
      "value": "0xB51"
    },
    "3127": {
      "jump": "i",
      "op": "JUMP"
    },
    "3128": {
      "op": "JUMPDEST"
    },
    "3129": {
      "op": "SWAP2"
    },
    "3130": {
      "op": "POP"
    },
    "3131": {
      "op": "POP"
    },
    "3132": {
      "op": "SWAP3"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "op": "SWAP3"
    },
    "3135": {
      "op": "SWAP1"
    },
    "3136": {
      "op": "POP"
    },
    "3137": {
      "jump": "o",
      "op": "JUMP"
    },
    "3138": {
      "op": "JUMPDEST"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3141": {
      "op": "DUP2"
    },
    "3142": {
      "op": "MSTORE"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3145": {
      "op": "PUSH2",
      "value": "0xC55"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3150": {
      "op": "DUP4"
    },
    "3151": {
      "op": "ADD"
    },
    "3152": {
      "op": "DUP8"
    },
    "3153": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "3156": {
      "jump": "i",
      "op": "JUMP"
    },
    "3157": {
      "op": "JUMPDEST"
    },
    "3158": {
      "op": "DUP3"
    },
    "3159": {
      "op": "DUP2"
    },
    "3160": {
      "op": "SUB"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3163": {
      "op": "DUP5"
    },
    "3164": {
      "op": "ADD"
    },
    "3165": {
      "op": "MSTORE"
    },
    "3166": {
      "op": "PUSH2",
      "value": "0xC67"
    },
    "3169": {
      "op": "DUP2"
    },
    "3170": {
      "op": "DUP8"
    },
    "3171": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "3174": {
      "jump": "i",
      "op": "JUMP"
    },
    "3175": {
      "op": "JUMPDEST"
    },
    "3176": {
      "op": "SWAP1"
    },
    "3177": {
      "op": "POP"
    },
    "3178": {
      "op": "DUP3"
    },
    "3179": {
      "op": "DUP2"
    },
    "3180": {
      "op": "SUB"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3183": {
      "op": "DUP5"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH2",
      "value": "0xC7B"
    },
    "3189": {
      "op": "DUP2"
    },
    "3190": {
      "op": "DUP7"
    },
    "3191": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "3194": {
      "jump": "i",
      "op": "JUMP"
    },
    "3195": {
      "op": "JUMPDEST"
    },
    "3196": {
      "op": "SWAP2"
    },
    "3197": {
      "op": "POP"
    },
    "3198": {
      "op": "POP"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3201": {
      "op": "DUP1"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3204": {
      "op": "SHL"
    },
    "3205": {
      "op": "SUB"
    },
    "3206": {
      "op": "DUP4"
    },
    "3207": {
      "op": "AND"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3210": {
      "op": "DUP4"
    },
    "3211": {
      "op": "ADD"
    },
    "3212": {
      "op": "MSTORE"
    },
    "3213": {
      "op": "SWAP6"
    },
    "3214": {
      "op": "SWAP5"
    },
    "3215": {
      "op": "POP"
    },
    "3216": {
      "op": "POP"
    },
    "3217": {
      "op": "POP"
    },
    "3218": {
      "op": "POP"
    },
    "3219": {
      "op": "POP"
    },
    "3220": {
      "jump": "o",
      "op": "JUMP"
    },
    "3221": {
      "op": "JUMPDEST"
    },
    "3222": {
      "op": "DUP1"
    },
    "3223": {
      "op": "CALLDATALOAD"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3230": {
      "op": "SHL"
    },
    "3231": {
      "op": "SUB"
    },
    "3232": {
      "op": "DUP2"
    },
    "3233": {
      "op": "AND"
    },
    "3234": {
      "op": "DUP2"
    },
    "3235": {
      "op": "EQ"
    },
    "3236": {
      "op": "PUSH2",
      "value": "0xCAC"
    },
    "3239": {
      "op": "JUMPI"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3242": {
      "op": "DUP1"
    },
    "3243": {
      "op": "REVERT"
    },
    "3244": {
      "op": "JUMPDEST"
    },
    "3245": {
      "op": "SWAP2"
    },
    "3246": {
      "op": "SWAP1"
    },
    "3247": {
      "op": "POP"
    },
    "3248": {
      "jump": "o",
      "op": "JUMP"
    },
    "3249": {
      "op": "JUMPDEST"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3254": {
      "op": "DUP3"
    },
    "3255": {
      "op": "DUP5"
    },
    "3256": {
      "op": "SUB"
    },
    "3257": {
      "op": "SLT"
    },
    "3258": {
      "op": "ISZERO"
    },
    "3259": {
      "op": "PUSH2",
      "value": "0xCC3"
    },
    "3262": {
      "op": "JUMPI"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3265": {
      "op": "DUP1"
    },
    "3266": {
      "op": "REVERT"
    },
    "3267": {
      "op": "JUMPDEST"
    },
    "3268": {
      "op": "PUSH2",
      "value": "0xCCC"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0xC95"
    },
    "3275": {
      "jump": "i",
      "op": "JUMP"
    },
    "3276": {
      "op": "JUMPDEST"
    },
    "3277": {
      "op": "SWAP4"
    },
    "3278": {
      "op": "SWAP3"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "op": "POP"
    },
    "3281": {
      "op": "POP"
    },
    "3282": {
      "jump": "o",
      "op": "JUMP"
    },
    "3283": {
      "op": "JUMPDEST"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3286": {
      "op": "DUP2"
    },
    "3287": {
      "op": "MSTORE"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xCCC"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3295": {
      "op": "DUP4"
    },
    "3296": {
      "op": "ADD"
    },
    "3297": {
      "op": "DUP5"
    },
    "3298": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "3301": {
      "jump": "i",
      "op": "JUMP"
    },
    "3302": {
      "op": "JUMPDEST"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3305": {
      "op": "DUP1"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3308": {
      "op": "DUP4"
    },
    "3309": {
      "op": "DUP6"
    },
    "3310": {
      "op": "SUB"
    },
    "3311": {
      "op": "SLT"
    },
    "3312": {
      "op": "ISZERO"
    },
    "3313": {
      "op": "PUSH2",
      "value": "0xCF9"
    },
    "3316": {
      "op": "JUMPI"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3319": {
      "op": "DUP1"
    },
    "3320": {
      "op": "REVERT"
    },
    "3321": {
      "op": "JUMPDEST"
    },
    "3322": {
      "op": "PUSH2",
      "value": "0xD02"
    },
    "3325": {
      "op": "DUP4"
    },
    "3326": {
      "op": "PUSH2",
      "value": "0xC95"
    },
    "3329": {
      "jump": "i",
      "op": "JUMP"
    },
    "3330": {
      "op": "JUMPDEST"
    },
    "3331": {
      "op": "SWAP2"
    },
    "3332": {
      "op": "POP"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3335": {
      "op": "DUP4"
    },
    "3336": {
      "op": "ADD"
    },
    "3337": {
      "op": "CALLDATALOAD"
    },
    "3338": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3347": {
      "op": "DUP2"
    },
    "3348": {
      "op": "GT"
    },
    "3349": {
      "op": "ISZERO"
    },
    "3350": {
      "op": "PUSH2",
      "value": "0xD1E"
    },
    "3353": {
      "op": "JUMPI"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3356": {
      "op": "DUP1"
    },
    "3357": {
      "op": "REVERT"
    },
    "3358": {
      "op": "JUMPDEST"
    },
    "3359": {
      "op": "PUSH2",
      "value": "0xC38"
    },
    "3362": {
      "op": "DUP6"
    },
    "3363": {
      "op": "DUP3"
    },
    "3364": {
      "op": "DUP7"
    },
    "3365": {
      "op": "ADD"
    },
    "3366": {
      "op": "PUSH2",
      "value": "0xB51"
    },
    "3369": {
      "jump": "i",
      "op": "JUMP"
    },
    "3370": {
      "op": "JUMPDEST"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3375": {
      "op": "DUP1"
    },
    "3376": {
      "op": "DUP4"
    },
    "3377": {
      "op": "ADD"
    },
    "3378": {
      "op": "DUP2"
    },
    "3379": {
      "op": "DUP5"
    },
    "3380": {
      "op": "MSTORE"
    },
    "3381": {
      "op": "DUP1"
    },
    "3382": {
      "op": "DUP6"
    },
    "3383": {
      "op": "MLOAD"
    },
    "3384": {
      "op": "DUP1"
    },
    "3385": {
      "op": "DUP4"
    },
    "3386": {
      "op": "MSTORE"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3389": {
      "op": "SWAP3"
    },
    "3390": {
      "op": "POP"
    },
    "3391": {
      "op": "DUP3"
    },
    "3392": {
      "op": "DUP7"
    },
    "3393": {
      "op": "ADD"
    },
    "3394": {
      "op": "SWAP2"
    },
    "3395": {
      "op": "POP"
    },
    "3396": {
      "op": "DUP3"
    },
    "3397": {
      "op": "DUP2"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3400": {
      "op": "SHL"
    },
    "3401": {
      "op": "DUP8"
    },
    "3402": {
      "op": "ADD"
    },
    "3403": {
      "op": "ADD"
    },
    "3404": {
      "op": "DUP5"
    },
    "3405": {
      "op": "DUP9"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3409": {
      "op": "JUMPDEST"
    },
    "3410": {
      "op": "DUP4"
    },
    "3411": {
      "op": "DUP2"
    },
    "3412": {
      "op": "LT"
    },
    "3413": {
      "op": "ISZERO"
    },
    "3414": {
      "op": "PUSH2",
      "value": "0xDD1"
    },
    "3417": {
      "op": "JUMPI"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3420": {
      "op": "NOT"
    },
    "3421": {
      "op": "DUP10"
    },
    "3422": {
      "op": "DUP5"
    },
    "3423": {
      "op": "SUB"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "DUP6"
    },
    "3426": {
      "op": "MSTORE"
    },
    "3427": {
      "op": "DUP2"
    },
    "3428": {
      "op": "MLOAD"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3431": {
      "op": "DUP2"
    },
    "3432": {
      "op": "MLOAD"
    },
    "3433": {
      "op": "DUP2"
    },
    "3434": {
      "op": "DUP7"
    },
    "3435": {
      "op": "MSTORE"
    },
    "3436": {
      "op": "PUSH2",
      "value": "0xD77"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "DUP8"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "DUP3"
    },
    "3443": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "3446": {
      "jump": "i",
      "op": "JUMP"
    },
    "3447": {
      "op": "JUMPDEST"
    },
    "3448": {
      "op": "SWAP2"
    },
    "3449": {
      "op": "POP"
    },
    "3450": {
      "op": "POP"
    },
    "3451": {
      "op": "DUP9"
    },
    "3452": {
      "op": "DUP3"
    },
    "3453": {
      "op": "ADD"
    },
    "3454": {
      "op": "MLOAD"
    },
    "3455": {
      "op": "DUP6"
    },
    "3456": {
      "op": "DUP3"
    },
    "3457": {
      "op": "SUB"
    },
    "3458": {
      "op": "DUP11"
    },
    "3459": {
      "op": "DUP8"
    },
    "3460": {
      "op": "ADD"
    },
    "3461": {
      "op": "MSTORE"
    },
    "3462": {
      "op": "PUSH2",
      "value": "0xD8F"
    },
    "3465": {
      "op": "DUP3"
    },
    "3466": {
      "op": "DUP3"
    },
    "3467": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "3470": {
      "jump": "i",
      "op": "JUMP"
    },
    "3471": {
      "op": "JUMPDEST"
    },
    "3472": {
      "op": "SWAP2"
    },
    "3473": {
      "op": "POP"
    },
    "3474": {
      "op": "POP"
    },
    "3475": {
      "op": "DUP8"
    },
    "3476": {
      "op": "DUP3"
    },
    "3477": {
      "op": "ADD"
    },
    "3478": {
      "op": "MLOAD"
    },
    "3479": {
      "op": "DUP6"
    },
    "3480": {
      "op": "DUP3"
    },
    "3481": {
      "op": "SUB"
    },
    "3482": {
      "op": "DUP10"
    },
    "3483": {
      "op": "DUP8"
    },
    "3484": {
      "op": "ADD"
    },
    "3485": {
      "op": "MSTORE"
    },
    "3486": {
      "op": "PUSH2",
      "value": "0xDA7"
    },
    "3489": {
      "op": "DUP3"
    },
    "3490": {
      "op": "DUP3"
    },
    "3491": {
      "op": "PUSH2",
      "value": "0xAE5"
    },
    "3494": {
      "jump": "i",
      "op": "JUMP"
    },
    "3495": {
      "op": "JUMPDEST"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3498": {
      "op": "SWAP4"
    },
    "3499": {
      "op": "DUP5"
    },
    "3500": {
      "op": "ADD"
    },
    "3501": {
      "op": "MLOAD"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3508": {
      "op": "SHL"
    },
    "3509": {
      "op": "SUB"
    },
    "3510": {
      "op": "AND"
    },
    "3511": {
      "op": "SWAP7"
    },
    "3512": {
      "op": "SWAP1"
    },
    "3513": {
      "op": "SWAP4"
    },
    "3514": {
      "op": "ADD"
    },
    "3515": {
      "op": "SWAP6"
    },
    "3516": {
      "op": "SWAP1"
    },
    "3517": {
      "op": "SWAP6"
    },
    "3518": {
      "op": "MSTORE"
    },
    "3519": {
      "op": "POP"
    },
    "3520": {
      "op": "SWAP5"
    },
    "3521": {
      "op": "DUP8"
    },
    "3522": {
      "op": "ADD"
    },
    "3523": {
      "op": "SWAP5"
    },
    "3524": {
      "op": "SWAP3"
    },
    "3525": {
      "op": "POP"
    },
    "3526": {
      "op": "SWAP1"
    },
    "3527": {
      "op": "DUP7"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "SWAP1"
    },
    "3530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3532": {
      "op": "ADD"
    },
    "3533": {
      "op": "PUSH2",
      "value": "0xD51"
    },
    "3536": {
      "op": "JUMP"
    },
    "3537": {
      "op": "JUMPDEST"
    },
    "3538": {
      "op": "POP"
    },
    "3539": {
      "op": "SWAP1"
    },
    "3540": {
      "op": "SWAP9"
    },
    "3541": {
      "op": "SWAP8"
    },
    "3542": {
      "op": "POP"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "POP"
    },
    "3545": {
      "op": "POP"
    },
    "3546": {
      "op": "POP"
    },
    "3547": {
      "op": "POP"
    },
    "3548": {
      "op": "POP"
    },
    "3549": {
      "op": "POP"
    },
    "3550": {
      "jump": "o",
      "op": "JUMP"
    },
    "3551": {
      "op": "JUMPDEST"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "DUP2"
    },
    "3555": {
      "op": "DUP2"
    },
    "3556": {
      "op": "SHR"
    },
    "3557": {
      "op": "SWAP1"
    },
    "3558": {
      "op": "DUP3"
    },
    "3559": {
      "op": "AND"
    },
    "3560": {
      "op": "DUP1"
    },
    "3561": {
      "op": "PUSH2",
      "value": "0xDF3"
    },
    "3564": {
      "op": "JUMPI"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3567": {
      "op": "DUP3"
    },
    "3568": {
      "op": "AND"
    },
    "3569": {
      "op": "SWAP2"
    },
    "3570": {
      "op": "POP"
    },
    "3571": {
      "op": "JUMPDEST"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3574": {
      "op": "DUP3"
    },
    "3575": {
      "op": "LT"
    },
    "3576": {
      "op": "DUP2"
    },
    "3577": {
      "op": "SUB"
    },
    "3578": {
      "op": "PUSH2",
      "value": "0xA96"
    },
    "3581": {
      "op": "JUMPI"
    },
    "3582": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3589": {
      "op": "SHL"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3592": {
      "op": "MSTORE"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3597": {
      "op": "MSTORE"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3602": {
      "op": "REVERT"
    },
    "3603": {
      "op": "JUMPDEST"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3606": {
      "op": "DUP3"
    },
    "3607": {
      "op": "GT"
    },
    "3608": {
      "op": "ISZERO"
    },
    "3609": {
      "op": "PUSH2",
      "value": "0x789"
    },
    "3612": {
      "op": "JUMPI"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3615": {
      "op": "DUP2"
    },
    "3616": {
      "op": "DUP2"
    },
    "3617": {
      "op": "MSTORE"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3620": {
      "op": "DUP2"
    },
    "3621": {
      "op": "KECCAK256"
    },
    "3622": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3624": {
      "op": "DUP6"
    },
    "3625": {
      "op": "ADD"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3628": {
      "op": "SHR"
    },
    "3629": {
      "op": "DUP2"
    },
    "3630": {
      "op": "ADD"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3633": {
      "op": "DUP7"
    },
    "3634": {
      "op": "LT"
    },
    "3635": {
      "op": "ISZERO"
    },
    "3636": {
      "op": "PUSH2",
      "value": "0xE3A"
    },
    "3639": {
      "op": "JUMPI"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "op": "DUP1"
    },
    "3642": {
      "op": "JUMPDEST"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3645": {
      "op": "DUP6"
    },
    "3646": {
      "op": "ADD"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3649": {
      "op": "SHR"
    },
    "3650": {
      "op": "DUP3"
    },
    "3651": {
      "op": "ADD"
    },
    "3652": {
      "op": "SWAP2"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "op": "JUMPDEST"
    },
    "3655": {
      "op": "DUP2"
    },
    "3656": {
      "op": "DUP2"
    },
    "3657": {
      "op": "LT"
    },
    "3658": {
      "op": "ISZERO"
    },
    "3659": {
      "op": "PUSH2",
      "value": "0xE59"
    },
    "3662": {
      "op": "JUMPI"
    },
    "3663": {
      "op": "DUP3"
    },
    "3664": {
      "op": "DUP2"
    },
    "3665": {
      "op": "SSTORE"
    },
    "3666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3668": {
      "op": "ADD"
    },
    "3669": {
      "op": "PUSH2",
      "value": "0xE46"
    },
    "3672": {
      "op": "JUMP"
    },
    "3673": {
      "op": "JUMPDEST"
    },
    "3674": {
      "op": "POP"
    },
    "3675": {
      "op": "POP"
    },
    "3676": {
      "op": "POP"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "op": "POP"
    },
    "3679": {
      "op": "POP"
    },
    "3680": {
      "jump": "o",
      "op": "JUMP"
    },
    "3681": {
      "op": "JUMPDEST"
    },
    "3682": {
      "op": "DUP2"
    },
    "3683": {
      "op": "MLOAD"
    },
    "3684": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3693": {
      "op": "DUP2"
    },
    "3694": {
      "op": "GT"
    },
    "3695": {
      "op": "ISZERO"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0xE7B"
    },
    "3699": {
      "op": "JUMPI"
    },
    "3700": {
      "op": "PUSH2",
      "value": "0xE7B"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0xB3B"
    },
    "3706": {
      "jump": "i",
      "op": "JUMP"
    },
    "3707": {
      "op": "JUMPDEST"
    },
    "3708": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3711": {
      "op": "DUP2"
    },
    "3712": {
      "op": "PUSH2",
      "value": "0xE89"
    },
    "3715": {
      "op": "DUP5"
    },
    "3716": {
      "op": "SLOAD"
    },
    "3717": {
      "op": "PUSH2",
      "value": "0xDDF"
    },
    "3720": {
      "jump": "i",
      "op": "JUMP"
    },
    "3721": {
      "op": "JUMPDEST"
    },
    "3722": {
      "op": "DUP5"
    },
    "3723": {
      "op": "PUSH2",
      "value": "0xE13"
    },
    "3726": {
      "jump": "i",
      "op": "JUMP"
    },
    "3727": {
      "op": "JUMPDEST"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3730": {
      "op": "DUP1"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3733": {
      "op": "DUP4"
    },
    "3734": {
      "op": "GT"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3737": {
      "op": "DUP2"
    },
    "3738": {
      "op": "EQ"
    },
    "3739": {
      "op": "PUSH2",
      "value": "0xEC4"
    },
    "3742": {
      "op": "JUMPI"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3745": {
      "op": "DUP5"
    },
    "3746": {
      "op": "ISZERO"
    },
    "3747": {
      "op": "PUSH2",
      "value": "0xEAC"
    },
    "3750": {
      "op": "JUMPI"
    },
    "3751": {
      "op": "POP"
    },
    "3752": {
      "op": "DUP6"
    },
    "3753": {
      "op": "DUP4"
    },
    "3754": {
      "op": "ADD"
    },
    "3755": {
      "op": "MLOAD"
    },
    "3756": {
      "op": "JUMPDEST"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3759": {
      "op": "NOT"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3762": {
      "op": "DUP7"
    },
    "3763": {
      "op": "SWAP1"
    },
    "3764": {
      "op": "SHL"
    },
    "3765": {
      "op": "SHR"
    },
    "3766": {
      "op": "NOT"
    },
    "3767": {
      "op": "AND"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3770": {
      "op": "DUP6"
    },
    "3771": {
      "op": "SWAP1"
    },
    "3772": {
      "op": "SHL"
    },
    "3773": {
      "op": "OR"
    },
    "3774": {
      "op": "DUP6"
    },
    "3775": {
      "op": "SSTORE"
    },
    "3776": {
      "op": "PUSH2",
      "value": "0xE59"
    },
    "3779": {
      "op": "JUMP"
    },
    "3780": {
      "op": "JUMPDEST"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3783": {
      "op": "DUP6"
    },
    "3784": {
      "op": "DUP2"
    },
    "3785": {
      "op": "MSTORE"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3788": {
      "op": "DUP2"
    },
    "3789": {
      "op": "KECCAK256"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3792": {
      "op": "NOT"
    },
    "3793": {
      "op": "DUP7"
    },
    "3794": {
      "op": "AND"
    },
    "3795": {
      "op": "SWAP2"
    },
    "3796": {
      "op": "JUMPDEST"
    },
    "3797": {
      "op": "DUP3"
    },
    "3798": {
      "op": "DUP2"
    },
    "3799": {
      "op": "LT"
    },
    "3800": {
      "op": "ISZERO"
    },
    "3801": {
      "op": "PUSH2",
      "value": "0xEF3"
    },
    "3804": {
      "op": "JUMPI"
    },
    "3805": {
      "op": "DUP9"
    },
    "3806": {
      "op": "DUP7"
    },
    "3807": {
      "op": "ADD"
    },
    "3808": {
      "op": "MLOAD"
    },
    "3809": {
      "op": "DUP3"
    },
    "3810": {
      "op": "SSTORE"
    },
    "3811": {
      "op": "SWAP5"
    },
    "3812": {
      "op": "DUP5"
    },
    "3813": {
      "op": "ADD"
    },
    "3814": {
      "op": "SWAP5"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "SWAP1"
    },
    "3818": {
      "op": "SWAP2"
    },
    "3819": {
      "op": "ADD"
    },
    "3820": {
      "op": "SWAP1"
    },
    "3821": {
      "op": "DUP5"
    },
    "3822": {
      "op": "ADD"
    },
    "3823": {
      "op": "PUSH2",
      "value": "0xED4"
    },
    "3826": {
      "op": "JUMP"
    },
    "3827": {
      "op": "JUMPDEST"
    },
    "3828": {
      "op": "POP"
    },
    "3829": {
      "op": "DUP6"
    },
    "3830": {
      "op": "DUP3"
    },
    "3831": {
      "op": "LT"
    },
    "3832": {
      "op": "ISZERO"
    },
    "3833": {
      "op": "PUSH2",
      "value": "0xF11"
    },
    "3836": {
      "op": "JUMPI"
    },
    "3837": {
      "op": "DUP8"
    },
    "3838": {
      "op": "DUP6"
    },
    "3839": {
      "op": "ADD"
    },
    "3840": {
      "op": "MLOAD"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3843": {
      "op": "NOT"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3846": {
      "op": "DUP9"
    },
    "3847": {
      "op": "SWAP1"
    },
    "3848": {
      "op": "SHL"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3851": {
      "op": "AND"
    },
    "3852": {
      "op": "SHR"
    },
    "3853": {
      "op": "NOT"
    },
    "3854": {
      "op": "AND"
    },
    "3855": {
      "op": "DUP2"
    },
    "3856": {
      "op": "SSTORE"
    },
    "3857": {
      "op": "JUMPDEST"
    },
    "3858": {
      "op": "POP"
    },
    "3859": {
      "op": "POP"
    },
    "3860": {
      "op": "POP"
    },
    "3861": {
      "op": "POP"
    },
    "3862": {
      "op": "POP"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "SWAP1"
    },
    "3866": {
      "op": "DUP2"
    },
    "3867": {
      "op": "SHL"
    },
    "3868": {
      "op": "ADD"
    },
    "3869": {
      "op": "SWAP1"
    },
    "3870": {
      "op": "SSTORE"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "jump": "o",
      "op": "JUMP"
    },
    "3873": {
      "op": "JUMPDEST"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3878": {
      "op": "DUP3"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "PUSH2",
      "value": "0xF41"
    },
    "3883": {
      "op": "JUMPI"
    },
    "3884": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3891": {
      "op": "SHL"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3894": {
      "op": "MSTORE"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3899": {
      "op": "MSTORE"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3904": {
      "op": "REVERT"
    },
    "3905": {
      "op": "JUMPDEST"
    },
    "3906": {
      "op": "POP"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3909": {
      "op": "ADD"
    },
    "3910": {
      "op": "SWAP1"
    },
    "3911": {
      "jump": "o",
      "op": "JUMP"
    },
    "3912": {
      "op": "JUMPDEST"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3915": {
      "op": "DUP3"
    },
    "3916": {
      "op": "MLOAD"
    },
    "3917": {
      "op": "PUSH2",
      "value": "0xF5A"
    },
    "3920": {
      "op": "DUP2"
    },
    "3921": {
      "op": "DUP5"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3924": {
      "op": "DUP8"
    },
    "3925": {
      "op": "ADD"
    },
    "3926": {
      "op": "PUSH2",
      "value": "0xAB5"
    },
    "3929": {
      "jump": "i",
      "op": "JUMP"
    },
    "3930": {
      "op": "JUMPDEST"
    },
    "3931": {
      "op": "SWAP2"
    },
    "3932": {
      "op": "SWAP1"
    },
    "3933": {
      "op": "SWAP2"
    },
    "3934": {
      "op": "ADD"
    },
    "3935": {
      "op": "SWAP3"
    },
    "3936": {
      "op": "SWAP2"
    },
    "3937": {
      "op": "POP"
    },
    "3938": {
      "op": "POP"
    },
    "3939": {
      "jump": "o",
      "op": "JUMP"
    },
    "3940": {
      "op": "JUMPDEST"
    },
    "3941": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3948": {
      "op": "SHL"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3951": {
      "op": "MSTORE"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3956": {
      "op": "MSTORE"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3961": {
      "op": "REVERT"
    }
  },
  "sha1": "bb9c1f4a7fb5d2fcea4f4f252e40f4463717ff66",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract Quote{\n    string private quote;\n    event quoteUploaded(string newQuote);\n    event quoteUploadedByUser(string _time, string _quote, string _user, address _userAddress);\n\n    // mapping(address => string) public users;\n\n    struct userQuoteTime {\n        mapping(address => string) u;\n        string _quote;\n        string _time ;        \n        \n    \n    }\n    function compareStrings (string memory a, string memory b) public view returns (bool) {\n    return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))));\n    }\n    struct newUser {\n        string userName;\n        address walletAddress;\n    }\n\n    struct newQuote {\n        string time;\n        string newQuoteNew;\n        string byUser;\n        address userAddress;\n    }\n\n    mapping (uint256 => newUser) public users;\n\n    mapping (uint256 => newQuote) public quotes;\n\n    uint256 public userCount;\n    uint256 public quoteCount;\n\n\n    function setQuoteLatest(string memory _time, string memory _quote) public {\n        // quote = _quote;\n        newQuote memory Quote;\n        Quote.time = _time;\n        Quote.newQuoteNew = _quote;\n\n        string memory _userName = exists1(msg.sender);\n        bool result = compareStrings(_userName, \"Undefined\");\n        if (result != true){\n            quotes[quoteCount] = newQuote(_time, _quote, _userName, msg.sender);\n            quoteCount++;\n            emit quoteUploadedByUser(_time, _quote, _userName, msg.sender);\n        } else {\n            revert(\"You need To SignIn\");\n        }\n\n    }\n\n    function getQuoteByUser() public view returns(newQuote[] memory){\n        newQuote[] memory id = new newQuote[](quoteCount);\n        for (uint i = 0; i < quoteCount; i++) {\n            newQuote storage quoteQ = quotes[i];\n            id[i] = quoteQ;\n        }\n        return id;\n    }\n    \n\n\n\n    function addNewUser(address _walletAddress, string memory _userName) public {\n        string memory result = exists1(_walletAddress);\n\n        \n        if (compareStrings(result, \"Undefined\")) {\n            newUser memory User;\n            User.userName = _userName;\n            User.walletAddress = _walletAddress;\n\n            users[userCount] = newUser(_userName, _walletAddress);\n            userCount++;\n        }\n    }\n\n\n\n    function exists1(address num) public view returns (string memory) {\n\n\n        for (uint i = 0; i < userCount; i++) {\n            if (users[i].walletAddress == num) {\n                return (users[i].userName);\n            }\n        }\n\n        return \"Undefined\";\n    }\n\n\n}",
  "sourceMap": "58:2539:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Quote.sol",
  "type": "contract"
}